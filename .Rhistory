targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
targets::tar_load(linear_models_visits)
linear_model_visits
linear_models_visits$mod_pos_tot_anova
linear_models_visits$mod_nb_tot_anova
linear_models_visits$mod_dur_tot_anova
targets::tar_load(data_id)
data_id$dur_boot
data_id$nb_boot
plot(data_id$nb_boot,data_id$dur_boot   )
mod_nb_tot <- lme4::glmer(data=data_id,nb_boot~nb_flo_open*ttt+height_mean*ttt+(1|session)+(1|session:id), family = "poisson")
performance::check_overdispersion(mod_nb_tot)
mod_nb_tot_anova <- car::Anova(mod_nb_tot)
mod_nb_tot_summary <- summary(mod_nb_tot)
mod_dur_tot <- lme4::lmer(data=data_id,dur_boot~nb_flo_open*ttt+height_mean*ttt+(1|session))
mod_dur_tot_anova <- car::Anova(mod_dur_tot)
mod_dur_tot_summary <- summary(mod_dur_tot)
mod_nb_tot_anova
mod_dur_tot_anova
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
targets::tar_load(linear_models_visits)
linear_models_visits$mod_pos_tot_anova
linear_models_visits$mod_nb_tot_anova
linear_models_visits$mod_dur_tot_anova
linear_models_visits$mod_dur_tot_summary
linear_models_visits$mod_nbtot_tot_anova
linear_models_visits$mod_nbtot_tot_summary
linear_models_visits$mod_pos_low_anova
linear_models_visits$mod_pos_low_summary
linear_models_visits$mod_pos_tot_summary
mod_nbtot_tot <- lme4::lmer(data=data_id,nb_visit~nb_flo_open*ttt+height_mean*ttt+(1|session), family = "poisson")
mod_nbtot_tot <- lme4::glmer(data=data_id,nb_visit~nb_flo_open*ttt+height_mean*ttt+(1|session), family = "poisson")
performance::check_overdispersion(mod_nb_tot)
performance::check_overdispersion(mod_nbtot_tot)
mod_nbtot_tot <- lme4::glmer(data=data_id,nb_visit~nb_flo_open*ttt+height_mean*ttt+(1|session)+(1|session:id), family = "poisson")
performance::check_overdispersion(mod_nbtot_tot)
mod_nbtot_tot_anova <- car::Anova(mod_nbtot_tot)
mod_nbtot_tot_summary <- summary(mod_nbtot_tot)
mod_nbtot_tot_anova
mod_nbtot_tot_summary
targets::tar_load(data_resume_visits)
file_path = "data/obs_ABPOLL.txt"
read.table(file_path,head=T)
data_nb_visits <- read.table(file_path,head=T) |>
rename(id=ID_full) |>
group_by(id) |>
summarise(nb_visits = n(),
nb_flower_visited = n_distinct(id_flow_full))
library(dplyr)
read.table(file_path,head=T) |>
rename(id=ID_full) |>
group_by(id) |>
summarise(nb_visits = n(),
nb_flower_visited = n_distinct(id_flow_full))
data_arrival_with_bee <- read.table(file_path,head=T) |>
rename(id=ID_full) |>
arrange(session,time) |> # to calculate ID age (visits needed to be sequentially arrange, independently of the pollinators)
pivot_wider(values_from=id,names_from=id,names_prefix="newid_",values_fn = list(id = ~ 1), values_fill = list(id = 0)) |>
mutate(across(starts_with("newid"),~ifelse(duplicated(cumsum(.)),NA,cumsum(.)))) |>
rowwise() |>
mutate(id_age=sum(across(starts_with("newid")),na.rm=T)-1) |>
select(!starts_with("newid")) |>
mutate(id=paste0(session,".",ifelse(ID==10,10,paste0("0",ID)))) |>
group_by(session,people) |>
mutate(no_visit=1:n()) |>
group_by(session,people) |>
mutate(consecut=consecutive_id(id)) |>
group_by(session,people,consecut) |>
summarise(start=min(time),
name_id=unique(id),
length=n(),
duration=sum(duration,na.rm=T)) |>
mutate(id=name_id) |>
pivot_wider(values_from=name_id,names_from=name_id,names_prefix="newid_",values_fn = list(name_id = ~ 1), values_fill = list(name_id = 0)) |>
mutate(across(starts_with("newid"),~ifelse(duplicated(cumsum(.)),NA,cumsum(.)))) |>
rowwise() |>
mutate(no_arrival=sum(across(starts_with("newid")),na.rm=T)-1) |>
select(!starts_with("newid")) |>
select(session,start,id,people,consecut,duration,no_arrival) |>
arrange(session,start)
library(dplyr)
data_arrival_with_bee <- read.table(file_path,head=T) |>
rename(id=ID_full) |>
arrange(session,time) |> # to calculate ID age (visits needed to be sequentially arrange, independently of the pollinators)
pivot_wider(values_from=id,names_from=id,names_prefix="newid_",values_fn = list(id = ~ 1), values_fill = list(id = 0)) |>
mutate(across(starts_with("newid"),~ifelse(duplicated(cumsum(.)),NA,cumsum(.)))) |>
rowwise() |>
mutate(id_age=sum(across(starts_with("newid")),na.rm=T)-1) |>
select(!starts_with("newid")) |>
mutate(id=paste0(session,".",ifelse(ID==10,10,paste0("0",ID)))) |>
group_by(session,people) |>
mutate(no_visit=1:n()) |>
group_by(session,people) |>
mutate(consecut=consecutive_id(id)) |>
group_by(session,people,consecut) |>
summarise(start=min(time),
name_id=unique(id),
length=n(),
duration=sum(duration,na.rm=T)) |>
mutate(id=name_id) |>
pivot_wider(values_from=name_id,names_from=name_id,names_prefix="newid_",values_fn = list(name_id = ~ 1), values_fill = list(name_id = 0)) |>
mutate(across(starts_with("newid"),~ifelse(duplicated(cumsum(.)),NA,cumsum(.)))) |>
rowwise() |>
mutate(no_arrival=sum(across(starts_with("newid")),na.rm=T)-1) |>
select(!starts_with("newid")) |>
select(session,start,id,people,consecut,duration,no_arrival) |>
arrange(session,start)
library(tidyverse)
data_arrival_with_bee <- read.table(file_path,head=T) |>
rename(id=ID_full) |>
arrange(session,time) |> # to calculate ID age (visits needed to be sequentially arrange, independently of the pollinators)
pivot_wider(values_from=id,names_from=id,names_prefix="newid_",values_fn = list(id = ~ 1), values_fill = list(id = 0)) |>
mutate(across(starts_with("newid"),~ifelse(duplicated(cumsum(.)),NA,cumsum(.)))) |>
rowwise() |>
mutate(id_age=sum(across(starts_with("newid")),na.rm=T)-1) |>
select(!starts_with("newid")) |>
mutate(id=paste0(session,".",ifelse(ID==10,10,paste0("0",ID)))) |>
group_by(session,people) |>
mutate(no_visit=1:n()) |>
group_by(session,people) |>
mutate(consecut=consecutive_id(id)) |>
group_by(session,people,consecut) |>
summarise(start=min(time),
name_id=unique(id),
length=n(),
duration=sum(duration,na.rm=T)) |>
mutate(id=name_id) |>
pivot_wider(values_from=name_id,names_from=name_id,names_prefix="newid_",values_fn = list(name_id = ~ 1), values_fill = list(name_id = 0)) |>
mutate(across(starts_with("newid"),~ifelse(duplicated(cumsum(.)),NA,cumsum(.)))) |>
rowwise() |>
mutate(no_arrival=sum(across(starts_with("newid")),na.rm=T)-1) |>
select(!starts_with("newid")) |>
select(session,start,id,people,consecut,duration,no_arrival) |>
arrange(session,start)
data_position <- data_arrival_with_bee |>
group_by(session, people, id) |>
summarise(mean_position_focal_bee = mean(consecut)) |>
left_join(data_arrival_with_bee |>
group_by(session, people) |>
summarise(max_boot = max(consecut))) |>
mutate(rel_mean_position_focal_bee = mean_position_focal_bee / max_boot) |>
group_by(session,id) |>
summarise(mean_position = mean(rel_mean_position_focal_bee))
data_nb_visits <- read.table(file_path,head=T) |>
rename(id=ID_full) |>
group_by(id) |>
summarise(nb_visits = n(),
nb_flower_visited = n_distinct(id_flow_full))
data_resume_visits <- data_arrival_with_bee |>
group_by(session,id,people) |>
summarize(contact_id_bee=max(no_arrival),
dur_tot_bee=sum(duration,na.rm=T)) |>
group_by(session,id) |>
summarize(contact_id=sum(contact_id_bee),
dur_tot=sum(dur_tot_bee,na.rm=T)) |>
left_join(data_position) |>
mutate(ttt=as.factor(case_when(grepl("FA",session)~"1_low",
grepl("MO",session)~"2_medium",
TRUE~"3_high")))
data_resume_visits
data_resume_visits <- data_arrival_with_bee |>
group_by(session,id,people) |>
summarize(contact_id_bee=max(no_arrival),
dur_tot_bee=sum(duration,na.rm=T)) |>
group_by(session,id) |>
summarize(contact_id=sum(contact_id_bee),
dur_tot=sum(dur_tot_bee,na.rm=T)) |>
left_join(data_position) |>
left_join(data_nb_visits) |>
mutate(ttt=as.factor(case_when(grepl("FA",session)~"1_low",
grepl("MO",session)~"2_medium",
TRUE~"3_high")))
data_resume_visits
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
targets::tar_load(data_id)
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
targets::tar_load(data_id)
# for the beta distribution, can't be exactly 1
eps <- 1e-6
data_id$r_mean_position <- pmin(pmax(data_id$r_mean_position, eps), 1 - eps)
mod_pos_tot <- glmmTMB::glmmTMB(
r_mean_position ~ r_nb_flo_open * ttt + r_height_mean * ttt + (1 | session),
family = glmmTMB::beta_family(link = "logit"),
data = data_id %>% filter(!is.na(r_mean_position))
)
mod_pos_tot_anova <- car::Anova(mod_pos_tot)
mod_pos_tot_summary <- summary(mod_pos_tot)
mod_pos_tot_anova
mod_pos_tot_summary
mod_contact_id_tot <- lme4::glmer(data=data_id,r_contact_id~r_nb_flo_open*ttt+r_height_mean*ttt+(1|session)+(1|session:id), family = "poisson")
performance::check_overdispersion(mod_contact_id_tot)
mod_contact_id_tot <- lme4::glmer(data=data_id,r_contact_id~r_nb_flo_open*ttt+r_height_mean*ttt+(1|session), family = "poisson")
performance::check_overdispersion(mod_contact_id_tot)
mod_contact_id_tot <- lme4::glmer(data=data_id,r_contact_id~r_nb_flo_open*ttt+r_height_mean*ttt+(1|session), family = "poisson")
performance::check_overdispersion(mod_contact_id_tot)
mod_contact_id_tot_anova <- car::Anova(mod_contact_id_tot)
mod_contact_id_tot_summary <- summary(mod_contact_id_tot)
mod_contact_id_tot_anova
mod_contact_id_tot_summary
mod_pos_tot <- lme4::lmer(data=data_id,r_mean_position~r_nb_flo_open*ttt+r_height_mean*ttt+(1|session))
mod_pos_tot_anova <- car::Anova(mod_pos_tot)
mod_pos_tot_summary <- summary(mod_pos_tot)
mod_pos_tot_anova
mod_pos_tot_summary
mod_dur_tot <- lme4::lmer(data=data_id,r_dur_tot~r_nb_flo_open*ttt+r_height_mean*ttt+(1|session))
mod_dur_tot_anova <- car::Anova(mod_dur_tot)
mod_dur_tot_summary <- summary(mod_dur_tot)
mod_dur_tot_anova
mod_dur_tot_summary
mod_nb_visits_tot <- lme4::glmer(data=data_id,r_nb_visits~r_nb_flo_open*ttt+r_height_mean*ttt+(1|session)+(1|session:id), family = "poisson")
mod_nb_visits_tot <- lme4::glmer(data=data_id,r_nb_visits~r_nb_flo_open*ttt+r_height_mean*ttt+(1|session))
mod_nb_visits_tot <- lme4::lmer(data=data_id,r_nb_visits~r_nb_flo_open*ttt+r_height_mean*ttt+(1|session))
# performance::check_overdispersion(mod_nb_visits_tot)
mod_nb_visits_tot_anova <- car::Anova(mod_nb_visits_tot)
mod_nb_visits_tot_summary <- summary(mod_nb_visits_tot)
mod_nb_visits_tot_anova
mod_nb_visits_tot_summary
data_id_low <- data_id |>
filter(ttt == "1_low")
mod_pos_low <- lme4::lmer(data=data_id_low,r_mean_position~r_nb_flo_open+r_height_mean+(1|session))
mod_pos_low_anova <- car::Anova(mod_pos_low)
mod_pos_low_summary <- summary(mod_pos_low)
mod_pos_low_anova
age <- c(30,30,33,34,35,26,32,60,29,31,32,33,28,36,31,26,36,33)
sort(age)
length(age)
age <- c(30,30,33,34,35,26,32,60,29,31,33,33,28,36,31,26,36,33)
sort(age)
mean(age)
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
targets::tar_load(data_sem_sampled_sessions)
target_ttt = "low"
target_sex = "mal"
data_target <- data_sem_sampled_sessions |>
filter(ttt == target_ttt & sex == target_sex)
formula1a <- reformulate(target_traits, response = "r_mean_position")
target_traits = c("r_nb_flo_open","r_height_mean")
data_target <- data_sem_sampled_sessions |>
filter(ttt == target_ttt & sex == target_sex)
formula1a <- reformulate(target_traits, response = "r_mean_position")
formula1a <- update(formula1a, . ~ . + (1|session))
formula1b <- reformulate(target_traits, response = "r_contact_id")
formula1b <- update(formula1b, . ~ . + (1|session))
formula1c <- reformulate(target_traits, response = "r_dur_tot")
formula1c <- update(formula1c, . ~ . + (1|session))
formula1d <- reformulate(target_traits, response = "r_nb_visits")
formula1d <- update(formula1d, . ~ . + (1|session))
formula1e <- reformulate(target_traits, response = "r_nb_flower_visited")
formula1e <- update(formula1e, . ~ . + (1|session))
formula2 <- reformulate(c("r_mean_position","r_contact_id","r_dur_tot","r_nb_visits","r_nb_flower_visited"), response = "r_oms")
formula2 <- update(formula2, . ~ . + (1|session))
psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_target,formula1a),
lme4::lmer(data=data_target,formula1b),
lme4::lmer(data=data_target,formula1c),
lme4::lmer(data=data_target,formula1d),
lme4::lmer(data=data_target,formula1e),
lme4::lmer(data=data_target,formula2))
plot <- plot(psem_proxy,
node_attrs = data.frame(fillcolor = color,
x = x_coord, y = y_coord,
fontsize=6),
edge_attrs = data.frame(fontsize=6))
x_coord = c(1,2,3,4,5,2.5)
y_coord = c(1,1,1,1,1,2)
color = "bisque4"
plot <- plot(psem_proxy,
node_attrs = data.frame(fillcolor = color,
x = x_coord, y = y_coord,
fontsize=6),
edge_attrs = data.frame(fontsize=6))
plot(psem_proxy)
x_coord = c(2,4,1,2,3,4,5,2.5), y_coord = c(1,1,2,2,2,2,2,3)
plot <- plot(psem_proxy,
node_attrs = data.frame(fillcolor = color,
x = x_coord, y = y_coord,
fontsize=6),
edge_attrs = data.frame(fontsize=6))
x_coord = c(2,4,1,2,3,4,5,2.5)
y_coord = c(1,1,2,2,2,2,2,3)
plot <- plot(psem_proxy,
node_attrs = data.frame(fillcolor = color,
x = x_coord, y = y_coord,
fontsize=6),
edge_attrs = data.frame(fontsize=6))
plot
x_coord = c(2,4,1,2,3,4,5,3)
plot <- plot(psem_proxy,
node_attrs = data.frame(fillcolor = color,
x = x_coord, y = y_coord,
fontsize=6),
edge_attrs = data.frame(fontsize=6))
plot
x_coord = c(1,2,3,4,5,3,2,4)
y_coord = c(2,2,2,2,2,3,1,1)
plot <- plot(psem_proxy,
node_attrs = data.frame(fillcolor = color,
x = x_coord, y = y_coord,
fontsize=6),
edge_attrs = data.frame(fontsize=6))
plot
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
file_path = "data/data_ABPOLL_ID_resume"
data_id <- read.table(file_path,head=T)
file_path = "data/data_ABPOLL_ID_resume.txt"
data_id <- read.table(file_path,head=T)
data_id$SR_fem_out
data_id$SR_self
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
targets::tar_load(data_id)
prop_selfing <- lme4::glmer(data = data_id, cbind(sr_self, sr_fem_out) ~ ttt + (1|session), family = "binomial")
Anova(mod_prop_selfing)
car::Anova(mod_prop_selfing)
mod_prop_selfing <- lme4::glmer(data = data_id, cbind(sr_self, sr_fem_out) ~ ttt + (1|session), family = "binomial")
car::Anova(mod_prop_selfing)
summary(mod_prop_selfing)
?leveneTest
data_id <- data_id |>
mutate(prop_selfing = sr_self / (sr_fem_out + sr_self))
data_id$prop_selfing
View(data_id)
leveneTest(prop_selfing ~ ttt, data = data_id)
car::leveneTest(prop_selfing ~ ttt, data = data_id)
data_id |>
group_by(ttt) |>
summarise(var_prop_selfing = var(prop_selfing, na.rm = T))
data_id |>
group_by(ttt) |>
summarise(mean_prop_selfing = mean(prop_selfing, na.rm = T),
var_prop_selfing = var(prop_selfing, na.rm = T))
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
# simple description
data_id |>
group_by(ttt) |>
summarise(mean_nb_visits = mean(nb_visits, na.rm = T),
var_nb_visits = var(nb_visits, na.rm = T))
library(ggplot2)
ggplot(data = data_id, aes(x = ttt, y = nb_visits)) +
geom_violin(trim = FALSE) +
stat_summary(
fun.data = "mean_sdl",  fun.args = list(mult = 1),
geom = "pointrange", color = "black"
) +
# for the beta distribution, can't be exactly 1
eps <- 1e-6
ggplot(data = data_id, aes(x = ttt, y = nb_visits)) +
geom_violin(trim = FALSE) +
stat_summary(
fun.data = "mean_sdl",  fun.args = list(mult = 1),
geom = "pointrange", color = "black"
)
data_id$nb_visits# for the beta distribution, can't be exactly 1
data_id$contact_id
data_id$mean_position
targets::tar_load(data_resume_visits)
data_resume_visits
View(data_resume_visits)
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
targets::tar_load(data_id)
data_id$nb_visita
data_id$nb_visits
data_id$contact_id
data_id$nb_flower_visited
# simple description
data_id |>
group_by(ttt) |>
summarise(mean_nb_visits = mean(nb_visits, na.rm = T),
var_nb_visits = var(nb_visits, na.rm = T))
data_id <- data_id |>
mutate(visited_or_not = ifelse(contact_id = 0, 0, 1))
data_id <- data_id |>
mutate(visited_or_not = ifelse(data_id$contact_id = 0, 0, 1))
data_id <- data_id |>
mutate(visited_or_not = ifelse(data_id$contact_id = 0, 0, 1))
data_id <- data_id |>
mutate(visited_or_not = ifelse(data_id$contact_id == 0, 0, 1))
data_id <- data_id |>
mutate(visited_or_not = ifelse(contact_id == 0, 0, 1))
data_id$visited_or_not
ggplot(data = data_id, aes(x = ttt, y = visited_or_not)) +
geom_violin(trim = FALSE) +
stat_summary(
fun.data = "mean_sdl",  fun.args = list(mult = 1),
geom = "pointrange", color = "black"
)
ggplot(data = data_id, aes(x = ttt, y = nb_flower_visited)) +
geom_violin(trim = FALSE) +
stat_summary(
fun.data = "mean_sdl",  fun.args = list(mult = 1),
geom = "pointrange", color = "black"
)
lme4::glmer((data_id, visited_or_not ~ ttt + (1|session), family = binomial))
lme4::glmer(data= data_id, visited_or_not ~ ttt + (1|session), family = binomial)
mod_visited_or_not <- lme4::glmer(data= data_id, visited_or_not ~ ttt + (1|session), family = binomial)
Anova(visited_or_not)
car::Anova(visited_or_not)
car::Anova(mod_visited_or_not)
summary(mod_visited_or_not)
emmeans::contrast(emmeans::emmeans(mod_visited_or_not, "ttt"), "pairwise", adjust = "Tukey")
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
targets::tar_load(data_id)
data_id$nb_flower_visited
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
