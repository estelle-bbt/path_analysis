dt_work <- dt_work %>%
mutate(type=relevel(type,ref="fem"))
sum_tab_fem <- summary(lmer(data=dt_work,r_SR_all~r_nb_dist_vis*type+(1|ID_full)))$coefficients %>%
as.data.frame() %>%
mutate(var=row.names(.))
est_fem <- sum_tab_fem %>%
filter(var=="r_nb_dist_vis") %>%
select(Estimate,'Std. Error','Pr(>|t|)')
dt_work <- dt_work %>%
mutate(type=relevel(type,ref="mal"))
sum_tab_mal <- summary(lmer(data=dt_work,r_SR_all~r_nb_dist_vis*type+(1|ID_full)))$coefficients %>%
as.data.frame() %>%
mutate(var=row.names(.))
est_mal <- sum_tab_mal %>%
filter(var=="r_nb_dist_vis") %>%
select(Estimate,'Std. Error','Pr(>|t|)')
tab_bat_jones_nb_dist_vis_all <- tab_bat_jones_nb_dist_vis_all %>%
bind_rows(tibble(session=s,type="fem",est_fem)) %>%
bind_rows(tibble(session=s,type="mal",est_mal))
}
tab_bat_jones_nb_dist_vis_all_fin <- tab_bat_jones_nb_dist_vis_all %>%
rename(est=Estimate,
se='Std. Error',
pval= 'Pr(>|t|)') %>%
mutate(est_up=est+1.96*se,
est_down=est-1.96*se) %>%
left_join(dt_opp_foc %>%
select(session,poll_treat_factor,Is_nb_dist_vis)) %>%
mutate(jones_index=est*sqrt(Is_nb_dist_vis)) %>%
mutate(poll_treat_factor=fct_relevel(poll_treat_factor, c("low","medium","high")))
# interaction
mod_jones_nb_dist_vis_all_0 <- lmer(data=tab_bat_jones_nb_dist_vis_all_fin,jones_index~poll_treat_factor*type+(1|session))
performance::check_model(mod_jones_nb_dist_vis_all_0)
Anova(mod_jones_nb_dist_vis_all_0,test="Chisq")
mod_jones_nb_dist_vis_all_1 <- lmer(data=tab_bat_jones_nb_dist_vis_all_fin,jones_index~poll_treat_factor+type+(1|session))
Anova(mod_jones_nb_dist_vis_all_1,test="Chisq")
anova(mod_jones_nb_dist_vis_all_0,mod_jones_nb_dist_vis_all_1,test="LRT")
summary(mod_jones_nb_dist_vis_all_1)
mod_jones_nb_dist_vis_all_2 <- lmer(data=tab_bat_jones_nb_dist_vis_all_fin,jones_index~poll_treat_factor+(1|session))
mod_jones_nb_dist_vis_all_3 <- lmer(data=tab_bat_jones_nb_dist_vis_all_fin,jones_index~type+(1|session))
val_inter_jones_nb_dist_vis_all <- round(anova(mod_jones_nb_dist_vis_all_0,mod_jones_nb_dist_vis_all_1,test="LRT")$`Pr(>Chisq)`[2],3)
val_type_jones_nb_dist_vis_all <- round(anova(mod_jones_nb_dist_vis_all_1,mod_jones_nb_dist_vis_all_2,test="LRT")$`Pr(>Chisq)`[2],3)
val_ttt_jones_nb_dist_vis_all <- round(anova(mod_jones_nb_dist_vis_all_1,mod_jones_nb_dist_vis_all_3,test="LRT")$`Pr(>Chisq)`[2],3)
val_jones_nb_dist_vis_all <- paste0("inter = ",val_inter_jones_nb_dist_vis_all," - sex = ",val_type_jones_nb_dist_vis_all," - ttt = ",val_ttt_jones_nb_dist_vis_all)
# LRT TABLE
# interaction
anova(mod_jones_nb_dist_vis_all_0,mod_jones_nb_dist_vis_all_1,test="LRT")
# type
anova(mod_jones_nb_dist_vis_all_1,mod_jones_nb_dist_vis_all_2,test="LRT")
# ttt
anova(mod_jones_nb_dist_vis_all_1,mod_jones_nb_dist_vis_all_3,test="LRT")
# 5. VARIANCE DECOMPOSITION -----------------------------------------------
# cf. script variance decomposition
# 6. CROSS-SEX EFFECTS -------------------------------------------------------
# when random effect, covvariance decomposition do not work
# have to work at the session scale
# we can do stats on output as for opportunity and variance decomposition then
# not any sense with selfing include -> in that case there is positive correlation automatically
# separated and not including germination rate as Bateman gradients
# which will be used to estimate cross-sex effects
dt <- read.table("Data/seed_number/all_data_long_NA_0AllFemFALSE_raw.txt")  %>%
# left_join(dt_PS) %>%
mutate(type=as.factor(type),
poll_treat_factor=as.factor(poll_treat_factor)) %>%
mutate(type=relevel(type, ref = "fem"),
poll_treat_factor=fct_relevel(poll_treat_factor, c("low","medium","high"))) %>%
mutate(loss_MS = 100-(100*gMS/get(paste0("nb_part_ID_out_co",c))))
dt_cross <- dt %>%
filter(type=="fem") %>%
rename(r_SR_out_fem=r_SR_out,
r_SR_all_fem=r_SR_all,
r_gMS_fem=r_gMS,
r_oMS_fem=r_nb_part_ID_out_co10) %>%
select(ID_full,session,poll_treat_factor,r_SR_out_fem,r_SR_all_fem,r_gMS_fem,r_oMS_fem) %>%
left_join(dt %>%
filter(type=="mal") %>%
rename(r_SR_out_mal=r_SR_out,
r_SR_all_mal=r_SR_all,
r_gMS_mal=r_gMS,
r_oMS_mal=r_nb_part_ID_out_co10) %>%
select(ID_full,session,poll_treat_factor,r_SR_out_mal,r_SR_all_mal,r_gMS_mal,r_oMS_mal))
#### REGRESSIONS ####
##### SR all #####
dt_cross_SR_all <- dt_cross %>%
filter(!(is.na(r_SR_all_fem)|is.na(r_SR_all_mal)))
corr_SR_all_low_0 <- lmer(data=dt_cross_SR_all %>% filter(poll_treat_factor=="low"),r_SR_all_fem~r_SR_all_mal+(1|session))
corr_SR_all_low_1 <- lmer(data=dt_cross_SR_all %>% filter(poll_treat_factor=="low"),r_SR_all_fem~1+(1|session))
summary(corr_SR_all_low_0)
anova(corr_SR_all_low_0,corr_SR_all_low_1,test="LRT")
corr_SR_all_medium_0 <- lmer(data=dt_cross_SR_all %>% filter(poll_treat_factor=="medium"),r_SR_all_fem~r_SR_all_mal+(1|session))
corr_SR_all_medium_1 <- lmer(data=dt_cross_SR_all %>% filter(poll_treat_factor=="medium"),r_SR_all_fem~1+(1|session))
summary(corr_SR_all_medium_0)
anova(corr_SR_all_medium_0,corr_SR_all_medium_1,test="LRT")
corr_SR_all_high_0 <- lmer(data=dt_cross_SR_all %>% filter(poll_treat_factor=="high"),r_SR_all_fem~r_SR_all_mal+(1|session))
corr_SR_all_high_1 <- lmer(data=dt_cross_SR_all %>% filter(poll_treat_factor=="high"),r_SR_all_fem~1+(1|session))
summary(corr_SR_all_high_0)
anova(corr_SR_all_high_0,corr_SR_all_high_1,test="LRT")
##### SR out #####
dt_cross_SR_out <- dt_cross %>%
filter(!(is.na(r_SR_out_fem)|is.na(r_SR_out_mal)))
corr_SR_out_low_0 <- lmer(data=dt_cross_SR_out %>% filter(poll_treat_factor=="low"),r_SR_out_fem~r_SR_out_mal+(1|session))
corr_SR_out_low_1 <- lmer(data=dt_cross_SR_out %>% filter(poll_treat_factor=="low"),r_SR_out_fem~1+(1|session))
summary(corr_SR_out_low_0)
anova(corr_SR_out_low_0,corr_SR_out_low_1,test="LRT")
corr_SR_out_medium_0 <- lmer(data=dt_cross_SR_out %>% filter(poll_treat_factor=="medium"),r_SR_out_fem~r_SR_out_mal+(1|session))
corr_SR_out_medium_1 <- lmer(data=dt_cross_SR_out %>% filter(poll_treat_factor=="medium"),r_SR_out_fem~1+(1|session))
summary(corr_SR_out_medium_0)
anova(corr_SR_out_medium_0,corr_SR_out_medium_1,test="LRT")
corr_SR_out_high_0 <- lmer(data=dt_cross_SR_out %>% filter(poll_treat_factor=="high"),r_SR_out_fem~r_SR_out_mal+(1|session))
corr_SR_out_high_1 <- lmer(data=dt_cross_SR_out %>% filter(poll_treat_factor=="high"),r_SR_out_fem~1+(1|session))
summary(corr_SR_out_high_0)
anova(corr_SR_out_high_0,corr_SR_out_high_1,test="LRT")
##### gMS #####
dt_cross_gMS <- dt_cross %>%
filter(!(is.na(r_gMS_fem)|is.na(r_gMS_mal)))
corr_gMS_low_0 <- lmer(data=dt_cross_gMS %>% filter(poll_treat_factor=="low"),r_gMS_fem~r_gMS_mal+(1|session))
corr_gMS_low_1 <- lmer(data=dt_cross_gMS %>% filter(poll_treat_factor=="low"),r_gMS_fem~1+(1|session))
summary(corr_gMS_low_0)
anova(corr_gMS_low_0,corr_gMS_low_1,test="LRT")
corr_gMS_medium_0 <- lmer(data=dt_cross_gMS %>% filter(poll_treat_factor=="medium"),r_gMS_fem~r_gMS_mal+(1|session))
corr_gMS_medium_1 <- lmer(data=dt_cross_gMS %>% filter(poll_treat_factor=="medium"),r_gMS_fem~1+(1|session))
summary(corr_gMS_medium_0)
anova(corr_gMS_medium_0,corr_gMS_medium_1,test="LRT")
corr_gMS_high_0 <- lmer(data=dt_cross_gMS %>% filter(poll_treat_factor=="high"),r_gMS_fem~r_gMS_mal+(1|session))
corr_gMS_high_1 <- lmer(data=dt_cross_gMS %>% filter(poll_treat_factor=="high"),r_gMS_fem~1+(1|session))
summary(corr_gMS_high_0)
anova(corr_gMS_high_0,corr_gMS_high_1,test="LRT")
##### oMS #####
dt_cross_oMS <- dt_cross %>%
filter(!(is.na(r_oMS_fem)|is.na(r_oMS_mal)))
corr_oMS_low_0 <- lmer(data=dt_cross_oMS %>% filter(poll_treat_factor=="low"),r_oMS_fem~r_oMS_mal+(1|session))
corr_oMS_low_1 <- lmer(data=dt_cross_oMS %>% filter(poll_treat_factor=="low"),r_oMS_fem~1+(1|session))
summary(corr_oMS_low_0)
anova(corr_oMS_low_0,corr_oMS_low_1,test="LRT")
corr_oMS_medium_0 <- lmer(data=dt_cross_oMS %>% filter(poll_treat_factor=="medium"),r_oMS_fem~r_oMS_mal+(1|session))
corr_oMS_medium_1 <- lmer(data=dt_cross_oMS %>% filter(poll_treat_factor=="medium"),r_oMS_fem~1+(1|session))
summary(corr_oMS_medium_0)
anova(corr_oMS_medium_0,corr_oMS_medium_1,test="LRT")
corr_oMS_high_0 <- lmer(data=dt_cross_oMS %>% filter(poll_treat_factor=="high"),r_oMS_fem~r_oMS_mal+(1|session))
corr_oMS_high_1 <- lmer(data=dt_cross_oMS %>% filter(poll_treat_factor=="high"),r_oMS_fem~1+(1|session))
summary(corr_oMS_high_0)
anova(corr_oMS_high_0,corr_oMS_high_1,test="LRT")
#### BATEMAN GRADIENTS ####
##### Females #####
# gMS
## overall
mod_cross_fem_gMS_0 <- lmer(data=dt_cross_gMS,r_SR_out_fem~r_gMS_fem*poll_treat_factor+r_gMS_mal*poll_treat_factor+(1|session))
mod_cross_fem_gMS_1 <- lmer(data=dt_cross_gMS,r_SR_out_fem~r_gMS_fem*poll_treat_factor+r_gMS_mal+poll_treat_factor+(1|session))
mod_cross_fem_gMS_2 <- lmer(data=dt_cross_gMS,r_SR_out_fem~r_gMS_fem*poll_treat_factor+poll_treat_factor+(1|session))
anova(mod_cross_fem_gMS_0,mod_cross_fem_gMS_1)
anova(mod_cross_fem_gMS_1,mod_cross_fem_gMS_2)
## per treatment
mod_cross_fem_gMS_0 <- lmer(data=dt_cross_gMS %>% filter(poll_treat_factor=="low"),r_SR_out_fem~r_gMS_fem+r_gMS_mal+(1|session))
mod_cross_fem_gMS_1 <- lmer(data=dt_cross_gMS %>% filter(poll_treat_factor=="low"),r_SR_out_fem~r_gMS_fem+(1|session))
anova(mod_cross_fem_gMS_0,mod_cross_fem_gMS_1)
mod_cross_fem_gMS_0 <- lmer(data=dt_cross_gMS %>% filter(poll_treat_factor=="medium"),r_SR_out_fem~r_gMS_fem+r_gMS_mal+(1|session))
mod_cross_fem_gMS_1 <- lmer(data=dt_cross_gMS %>% filter(poll_treat_factor=="medium"),r_SR_out_fem~r_gMS_fem+(1|session))
anova(mod_cross_fem_gMS_0,mod_cross_fem_gMS_1)
mod_cross_fem_gMS_0 <- lmer(data=dt_cross_gMS %>% filter(poll_treat_factor=="high"),r_SR_out_fem~r_gMS_fem+r_gMS_mal+(1|session))
mod_cross_fem_gMS_1 <- lmer(data=dt_cross_gMS %>% filter(poll_treat_factor=="high"),r_SR_out_fem~r_gMS_fem+(1|session))
anova(mod_cross_fem_gMS_0,mod_cross_fem_gMS_1)
# oMS
## overall
mod_cross_fem_oMS_0 <- lmer(data=dt_cross_oMS,r_SR_out_fem~r_oMS_fem*poll_treat_factor+r_oMS_mal*poll_treat_factor+(1|session))
mod_cross_fem_oMS_1 <- lmer(data=dt_cross_oMS,r_SR_out_fem~r_oMS_fem*poll_treat_factor+r_oMS_mal+poll_treat_factor+(1|session))
mod_cross_fem_oMS_2 <- lmer(data=dt_cross_oMS,r_SR_out_fem~r_oMS_fem*poll_treat_factor+poll_treat_factor+(1|session))
anova(mod_cross_fem_oMS_0,mod_cross_fem_oMS_1)
anova(mod_cross_fem_oMS_1,mod_cross_fem_oMS_2)
## per treatment
mod_cross_fem_oMS_0 <- lmer(data=dt_cross_oMS %>% filter(poll_treat_factor=="low"),r_SR_out_fem~r_oMS_fem+r_oMS_mal+(1|session))
mod_cross_fem_oMS_1 <- lmer(data=dt_cross_oMS %>% filter(poll_treat_factor=="low"),r_SR_out_fem~r_oMS_fem+(1|session))
anova(mod_cross_fem_oMS_0,mod_cross_fem_oMS_1)
mod_cross_fem_oMS_0 <- lmer(data=dt_cross_oMS %>% filter(poll_treat_factor=="medium"),r_SR_out_fem~r_oMS_fem+r_oMS_mal+(1|session))
mod_cross_fem_oMS_1 <- lmer(data=dt_cross_oMS %>% filter(poll_treat_factor=="medium"),r_SR_out_fem~r_oMS_fem+(1|session))
anova(mod_cross_fem_oMS_0,mod_cross_fem_oMS_1)
mod_cross_fem_oMS_0 <- lmer(data=dt_cross_oMS %>% filter(poll_treat_factor=="high"),r_SR_out_fem~r_oMS_fem+r_oMS_mal+(1|session))
mod_cross_fem_oMS_1 <- lmer(data=dt_cross_oMS %>% filter(poll_treat_factor=="high"),r_SR_out_fem~r_oMS_fem+(1|session))
anova(mod_cross_fem_oMS_0,mod_cross_fem_oMS_1)
##### Males #####
# gMS
## overall
mod_cross_mal_gMS_0 <- lmer(data=dt_cross_gMS,r_SR_out_mal~r_gMS_mal*poll_treat_factor+r_gMS_fem*poll_treat_factor+(1|session))
mod_cross_mal_gMS_1 <- lmer(data=dt_cross_gMS,r_SR_out_mal~r_gMS_mal*poll_treat_factor+r_gMS_fem+poll_treat_factor+(1|session))
mod_cross_mal_gMS_2 <- lmer(data=dt_cross_gMS,r_SR_out_mal~r_gMS_mal*poll_treat_factor+poll_treat_factor+(1|session))
anova(mod_cross_mal_gMS_0,mod_cross_mal_gMS_1)
anova(mod_cross_mal_gMS_1,mod_cross_mal_gMS_2)
## per treatment
mod_cross_mal_gMS_0 <- lmer(data=dt_cross_gMS %>% filter(poll_treat_factor=="low"),r_SR_out_mal~r_gMS_mal+r_gMS_fem+(1|session))
mod_cross_mal_gMS_1 <- lmer(data=dt_cross_gMS %>% filter(poll_treat_factor=="low"),r_SR_out_mal~r_gMS_mal+(1|session))
anova(mod_cross_mal_gMS_0,mod_cross_mal_gMS_1)
mod_cross_mal_gMS_0 <- lmer(data=dt_cross_gMS %>% filter(poll_treat_factor=="medium"),r_SR_out_mal~r_gMS_mal+r_gMS_fem+(1|session))
mod_cross_mal_gMS_1 <- lmer(data=dt_cross_gMS %>% filter(poll_treat_factor=="medium"),r_SR_out_mal~r_gMS_mal+(1|session))
anova(mod_cross_mal_gMS_0,mod_cross_mal_gMS_1)
mod_cross_mal_gMS_0 <- lmer(data=dt_cross_gMS %>% filter(poll_treat_factor=="high"),r_SR_out_mal~r_gMS_mal+r_gMS_fem+(1|session))
mod_cross_mal_gMS_1 <- lmer(data=dt_cross_gMS %>% filter(poll_treat_factor=="high"),r_SR_out_mal~r_gMS_mal+(1|session))
anova(mod_cross_mal_gMS_0,mod_cross_mal_gMS_1)
# oMS
## overall
mod_cross_mal_oMS_0 <- lmer(data=dt_cross_oMS,r_SR_out_mal~r_oMS_mal*poll_treat_factor+r_oMS_fem*poll_treat_factor+(1|session))
mod_cross_mal_oMS_1 <- lmer(data=dt_cross_oMS,r_SR_out_mal~r_oMS_mal*poll_treat_factor+r_oMS_fem+poll_treat_factor+(1|session))
mod_cross_mal_oMS_2 <- lmer(data=dt_cross_oMS,r_SR_out_mal~r_oMS_mal*poll_treat_factor+poll_treat_factor+(1|session))
anova(mod_cross_mal_oMS_0,mod_cross_mal_oMS_1)
anova(mod_cross_mal_oMS_1,mod_cross_mal_oMS_2)
## per treatment
mod_cross_mal_oMS_0 <- lmer(data=dt_cross_oMS %>% filter(poll_treat_factor=="low"),r_SR_out_mal~r_oMS_mal+r_oMS_fem+(1|session))
mod_cross_mal_oMS_1 <- lmer(data=dt_cross_oMS %>% filter(poll_treat_factor=="low"),r_SR_out_mal~r_oMS_mal+(1|session))
anova(mod_cross_mal_oMS_0,mod_cross_mal_oMS_1)
mod_cross_mal_oMS_0 <- lmer(data=dt_cross_oMS %>% filter(poll_treat_factor=="medium"),r_SR_out_mal~r_oMS_mal+r_oMS_fem+(1|session))
mod_cross_mal_oMS_1 <- lmer(data=dt_cross_oMS %>% filter(poll_treat_factor=="medium"),r_SR_out_mal~r_oMS_mal+(1|session))
anova(mod_cross_mal_oMS_0,mod_cross_mal_oMS_1)
mod_cross_mal_oMS_0 <- lmer(data=dt_cross_oMS %>% filter(poll_treat_factor=="high"),r_SR_out_mal~r_oMS_mal+r_oMS_fem+(1|session))
mod_cross_mal_oMS_1 <- lmer(data=dt_cross_oMS %>% filter(poll_treat_factor=="high"),r_SR_out_mal~r_oMS_mal+(1|session))
anova(mod_cross_mal_oMS_0,mod_cross_mal_oMS_1)
# 7. PROPORTION OF VISITED FLOWERS -------------------------------------------
common_theme_hist <- theme(axis.text.x = element_text(size=10),
axis.text.y = element_text(size=8,margin = margin(t = 0, r = 5, b = 0, l = 5)),
legend.position = "none",
plot.background = element_blank(),
# panel.grid.major=element_blank(),
plot.margin = margin(t=5, r=5, b=5, l=5),
strip.background = element_rect(colour="black",
linewidth=1.5, linetype="solid"),
panel.background = element_rect(colour="black", fill="white",linewidth=1),
axis.title.y = element_text(size=11))
prop_vis_data <- read.table("~/Documents/ISEM/1_ABPOLL/Data/3_COMPIL/TABLES/data_ABPOLL_ID_level_detflo.txt",head=T) %>%
mutate(ID_full_foc = paste0(session,".",sprintf("%02d", ID)),
ID_full_part = paste0(session,".",sprintf("%02d", ID_part)),.before = 1) %>%
filter(!session %in% c("5.FA1","5.MO1"))  %>%
filter(ID_full_foc != "1.MO1.07") %>% # more fruit than touched flowers
filter(ID_full_foc != ID_full_part) %>%
filter(!(is.na(export_nb_visit_co10)|export_nb_visit_co10==0)) %>%
filter(!(grepl("Bouton",id_flow_part)|grepl("NR",id_flow_part))) %>%
mutate(ttt = as.factor(case_when(grepl("FA",session)~"1_low",
grepl("MO",session)~"2_medium",
TRUE~"3_high"))) %>%
group_by(ttt, ID_full_foc, ID_full_part) %>%
summarise(nb_fruit = sum(nbGr_SR != 0 & !is.na(nbGr_SR)),
nb_flo_touched = n_distinct (id_flow_part)) %>%
left_join(dti %>%
select(ID_full, nb_flo), by = join_by(ID_full_part == ID_full)) %>%
mutate(prop_visited = nb_flo_touched / nb_flo,
prop_fruit = nb_fruit / nb_flo_touched) %>%
group_by(ttt,ID_full_foc) %>%
summarise(mean_prop_visited = mean(prop_visited,na.rm=T),
mean_prop_fruit = mean(prop_fruit,na.rm =T)) %>%
mutate(sex = "male") %>%
bind_rows(read.table("~/Documents/ISEM/1_ABPOLL/Data/3_COMPIL/TABLES/data_ABPOLL_ID_level_detflo.txt",head=T) %>%
mutate(ID_full_foc = paste0(session,".",sprintf("%02d", ID)),
ID_full_part = paste0(session,".",sprintf("%02d", ID_part)),.before = 1) %>%
filter(!session %in% c("5.FA1","5.MO1"))  %>%
filter(ID_full_foc != "1.MO1.07") %>% # more fruit than touched flowers
filter(ID_full_foc != ID_full_part) %>%
filter(!(is.na(import_nb_visit_co10)|import_nb_visit_co10==0)) %>%
filter(!(grepl("Bouton",id_flow_part)|grepl("NR",id_flow_part))) %>%
mutate(ttt = as.factor(case_when(grepl("FA",session)~"1_low",
grepl("MO",session)~"2_medium",
TRUE~"3_high"))) %>%
group_by(ttt, ID_full_foc, ID_full_part) %>%
summarise(nb_fruit = sum(nbGr_SR != 0 & !is.na(nbGr_SR)),
nb_flo_touched = n_distinct (id_flow_part)) %>%
left_join(dti %>%
select(ID_full, nb_flo), by = join_by(ID_full_part == ID_full)) %>%
mutate(prop_visited = nb_flo_touched / nb_flo,
prop_fruit = nb_fruit / nb_flo_touched) %>%
group_by(ttt,ID_full_foc) %>%
summarise(mean_prop_visited = mean(prop_visited,na.rm=T),
mean_prop_fruit = mean(prop_fruit,na.rm =T)) %>%
mutate(sex = "female"))
# proportion of visited flowers per mate
prop_vis_plot <- ggplot(data = prop_vis_data, aes(x = mean_prop_visited, fill = sex)) +
# facet_grid(sex~.)+
geom_histogram(color="black", alpha = 0.9, position="identity") +
scale_fill_manual(values = c("#C89656","#7F9F90")) +
ggthemes::theme_calc(base_family = "sans") +
common_theme_hist +
ylab("Count") +
theme(legend.position = "none") +
xlab("Proportion of visited flowers per mate")
# proportion of visited flowers per mate that give fruits
prop_fruit_plot <-ggplot(data = prop_vis_data %>% filter(sex =="male"), aes(x = mean_prop_fruit)) +
facet_grid(ttt~.)+
geom_histogram(fill="#7F9F90",color="black") +
ggthemes::theme_calc(base_family = "sans") +
common_theme_hist +
ylab("Count") +
xlab("Proportion of visited flowers per mate\nthat give fruits with seeds")
ggsave("prop_vis_plot.jpeg",prop_vis_plot,dpi = 600, width = 4, height = 4)
ggsave("prop_fruit_plot.jpeg",prop_fruit_plot,dpi = 600, width = 4, height = 4)
visited_with_seeds <- read.table("~/Documents/ISEM/1_ABPOLL/Data/3_COMPIL/TABLES/data_ABPOLL_flower_resume.txt",head=T) %>%
filter(!(is.na(import_nb_visit_out_co10)|import_nb_visit_out_co10==0)) %>%
filter(!(grepl("Bouton",id_flow)|grepl("NR",id_flow))) %>%
mutate(ttt = as.factor(case_when(grepl("FA",session)~"1_low",
grepl("MO",session)~"2_medium",
TRUE~"3_high"))) %>%
filter(!(is.na(nbGr_SR)|nbGr_SR == 0))
# filter(!(is.na(nbGr_SR)|nbGr_SR == 0))
visited_with_seeds %>%
group_by(ttt) %>%
summarise(mean(nbGr_SR))
# summarise(mean(nbGr_SR))
# number of viable seed -> poisson like distribution with non-integer = Gamma
model <- glmer(data = visited_with_seeds, nbGr_SR ~ ttt + (1 | session) + (1 | session:ID_full), family = Gamma(link = "log"))
Anova(model)
summary(model)
ggplot(data = visited_with_seeds, aes(x = nbGr_SR)) +
facet_grid(ttt~.)+
geom_histogram(fill="#7F9F90",color="black") +
ggthemes::theme_calc(base_family = "sans") +
common_theme_hist
visited_fruit_or_not <- read.table("~/Documents/ISEM/1_ABPOLL/Data/3_COMPIL/TABLES/data_ABPOLL_flower_resume.txt",head=T) %>%
filter(!(is.na(import_nb_visit_out_co10)|import_nb_visit_out_co10==0)) %>%
filter(!(grepl("Bouton",id_flow)|grepl("NR",id_flow))) %>%
filter(frt != -1) %>% # remove fruits with problem
mutate(ttt = as.factor(case_when(grepl("FA",session)~"1_low",
grepl("MO",session)~"2_medium",
TRUE~"3_high")))
visited_fruit_or_not %>%
group_by(ttt) %>%
summarise(mean(frt))
# summarise(mean(nbGr_SR))
# number of viable seed -> poisson like distribution with non-integer = Gamma
model <- glmer(data = visited_fruit_or_not, frt ~ ttt + (1 | session) + (1 | session:ID_full), family = "binomial")
Anova(model)
summary(model)
visited_id_with_seeds <- read.table("~/Documents/ISEM/1_ABPOLL/Data/3_COMPIL/TABLES/data_ABPOLL_ID_resume.txt",head=T) %>%
filter(!(is.na(import_nb_visit_out_co10)|import_nb_visit_out_co10==0)) %>%
mutate(ttt = as.factor(case_when(grepl("FA",session)~"1_low",
grepl("MO",session)~"2_medium",
TRUE~"3_high"))) %>%
filter(!(is.na(nbGr_SR_sum)|nbGr_SR_sum == 0))
visited_id_with_seeds %>%
group_by(ttt) %>%
summarise(mean(nbGr_SR_sum))
# summarise(mean(nbGr_SR))
# number of viable seed -> poisson like distribution with non-integer = Gamma
model <- glmer(data = visited_id_with_seeds, nbGr_SR_sum ~ ttt + (1 | session), family = Gamma(link = "log"))
Anova(model)
summary(model)
ggplot(data = visited_id_with_seeds, aes(x = nbGr_SR_sum)) +
facet_grid(ttt~.)+
geom_histogram(fill="#7F9F90",color="black") +
ggthemes::theme_calc(base_family = "sans") +
common_theme_hist
# number of viable seed -> poisson like distribution with non-integer = Gamma Gamma(link = "log")
# number of seed -> poisson distribution
model <- glmer(data = visited_with_seeds, nbGr_SR ~ ttt + (1 | session) + (1 | session:ID_full), family = "poisson")
Anova(model)
summary(model)
ggplot(data = visited_with_seeds, aes(x = nbGr_SR)) +
facet_grid(ttt~.)+
geom_histogram(fill="#7F9F90",color="black") +
ggthemes::theme_calc(base_family = "sans") +
common_theme_hist
visited_id_with_seeds <- read.table("~/Documents/ISEM/1_ABPOLL/Data/3_COMPIL/TABLES/data_ABPOLL_ID_resume.txt",head=T) %>%
filter(!(is.na(import_nb_visit_out_co10)|import_nb_visit_out_co10==0)) %>%
mutate(ttt = as.factor(case_when(grepl("FA",session)~"1_low",
grepl("MO",session)~"2_medium",
TRUE~"3_high"))) %>%
filter(!(is.na(nbGr_SR_sum)|nbGr_SR_sum == 0))
visited_id_with_seeds %>%
group_by(ttt) %>%
summarise(mean(nbGr_SR_sum))
# number of viable seed -> poisson like distribution with non-integer = Gamma
model <- glmer(data = visited_id_with_seeds, nbGr_SR_sum ~ ttt + (1 | session), family = Gamma(link = "log"))
Anova(model)
summary(model)
ggplot(data = visited_id_with_seeds, aes(x = nbGr_SR_sum)) +
facet_grid(ttt~.)+
geom_histogram(fill="#7F9F90",color="black") +
ggthemes::theme_calc(base_family = "sans") +
common_theme_hist
visited_fruit_or_not <- read.table("~/Documents/ISEM/1_ABPOLL/Data/3_COMPIL/TABLES/data_ABPOLL_flower_resume.txt",head=T) %>%
filter(!(is.na(import_nb_visit_out_co10)|import_nb_visit_out_co10==0)) %>%
filter(!(grepl("Bouton",id_flow)|grepl("NR",id_flow))) %>%
filter(frt != -1) %>% # remove fruits with problem
mutate(ttt = as.factor(case_when(grepl("FA",session)~"1_low",
grepl("MO",session)~"2_medium",
TRUE~"3_high")))
visited_fruit_or_not %>%
group_by(ttt) %>%
summarise(mean(frt))
# number of viable seed -> poisson like distribution with non-integer = Gamma
model <- glmer(data = visited_fruit_or_not, frt ~ ttt + (1 | session) + (1 | session:ID_full), family = "binomial")
Anova(model)
summary(model)
visited_fruit_or_not <- read.table("~/Documents/ISEM/1_ABPOLL/Data/3_COMPIL/TABLES/data_ABPOLL_flower_resume.txt",head=T) %>%
filter(!(is.na(import_nb_visit_out_co10)|import_nb_visit_out_co10==0)) %>%
# filter(!(grepl("Bouton",id_flow)|grepl("NR",id_flow))) %>%
filter(frt != -1) %>% # remove fruits with problem
mutate(ttt = as.factor(case_when(grepl("FA",session)~"1_low",
grepl("MO",session)~"2_medium",
TRUE~"3_high")))
visited_fruit_or_not %>%
group_by(ttt) %>%
summarise(mean(frt))
visited_fruit_or_not <- read.table("~/Documents/ISEM/1_ABPOLL/Data/3_COMPIL/TABLES/data_ABPOLL_flower_resume.txt",head=T) %>%
filter(!(is.na(import_nb_visit_out_co10)|import_nb_visit_out_co10==0)) %>%
filter(!(grepl("Bouton",id_flow)|grepl("NR",id_flow))) %>%
filter(frt != -1) %>% # remove fruits with problem
mutate(ttt = as.factor(case_when(grepl("FA",session)~"1_low",
grepl("MO",session)~"2_medium",
TRUE~"3_high")))
visited_fruit_or_not %>%
group_by(ttt) %>%
summarise(mean(frt))
# number of viable seed -> poisson like distribution with non-integer = Gamma
model <- glmer(data = visited_fruit_or_not, frt ~ ttt + (1 | session) + (1 | session:ID_full), family = "binomial")
Anova(model)
summary(model)
visited_with_seeds <- read.table("~/Documents/ISEM/1_ABPOLL/Data/3_COMPIL/TABLES/data_ABPOLL_flower_resume.txt",head=T) %>%
filter(!(is.na(import_nb_visit_out_co10)|import_nb_visit_out_co10==0)) %>%
filter(!(grepl("Bouton",id_flow)|grepl("NR",id_flow))) %>%
mutate(ttt = as.factor(case_when(grepl("FA",session)~"1_low",
grepl("MO",session)~"2_medium",
TRUE~"3_high"))) %>%
filter(!(is.na(nbGr_SR)|nbGr_SR == 0))
visited_with_seeds %>%
group_by(ttt) %>%
summarise(mean(nbGr_SR))
# number of viable seed -> poisson like distribution with non-integer = Gamma Gamma(link = "log")
# number of seed -> poisson distribution
model <- glmer(data = visited_with_seeds, nbGr_SR ~ ttt + (1 | session) + (1 | session:ID_full), family = "poisson")
Anova(model)
summary(model)
ggplot(data = visited_with_seeds, aes(x = nbGr_SR)) +
facet_grid(ttt~.)+
geom_histogram(fill="#7F9F90",color="black") +
ggthemes::theme_calc(base_family = "sans") +
common_theme_hist
# number of viable seed -> poisson like distribution with non-integer = Gamma Gamma(link = "log")
# number of seed -> poisson distribution
model <- glmer(data = visited_with_seeds, nbGr_SR ~ ttt + pl  + (1 | session) + (1 | session:ID_full), family = "poisson")
Anova(model)
summary(model)
# number of viable seed -> poisson like distribution with non-integer = Gamma Gamma(link = "log")
# number of seed -> poisson distribution
model <- glmer(data = visited_with_seeds, nbGr_SR ~ ttt + (1 | session) + (1 | session:ID_full), family = "poisson")
Anova(model)
summary(model)
ggplot(data = visited_with_seeds, aes(x = nbGr_SR)) +
facet_grid(ttt~.)+
geom_histogram(fill="#7F9F90",color="black") +
ggthemes::theme_calc(base_family = "sans") +
common_theme_hist
visited_fruit_or_not <- read.table("~/Documents/ISEM/1_ABPOLL/Data/3_COMPIL/TABLES/data_ABPOLL_flower_resume.txt",head=T) %>%
filter(!(is.na(import_nb_visit_out_co10)|import_nb_visit_out_co10==0)) %>%
filter(!(grepl("Bouton",id_flow)|grepl("NR",id_flow))) %>%
filter(frt != -1) %>% # remove fruits with problem
mutate(ttt = as.factor(case_when(grepl("FA",session)~"1_low",
grepl("MO",session)~"2_medium",
TRUE~"3_high")))
visited_fruit_or_not %>%
group_by(ttt) %>%
summarise(mean(frt))
# number of viable seed -> poisson like distribution with non-integer = Gamma
model <- glmer(data = visited_fruit_or_not, frt ~ ttt + (1 | session) + (1 | session:ID_full), family = "binomial")
Anova(model)
summary(model)
visited_id_with_seeds <- read.table("~/Documents/ISEM/1_ABPOLL/Data/3_COMPIL/TABLES/data_ABPOLL_ID_resume.txt",head=T) %>%
filter(!(is.na(import_nb_visit_out_co10)|import_nb_visit_out_co10==0)) %>%
mutate(ttt = as.factor(case_when(grepl("FA",session)~"1_low",
grepl("MO",session)~"2_medium",
TRUE~"3_high"))) %>%
filter(!(is.na(nbGr_SR_sum)|nbGr_SR_sum == 0))
visited_id_with_seeds %>%
group_by(ttt) %>%
summarise(mean(nbGr_SR_sum))
# number of viable seed -> poisson like distribution with non-integer = Gamma
model <- glmer(data = visited_id_with_seeds, nbGr_SR_sum ~ ttt + (1 | session), family = Gamma(link = "log"))
Anova(model)
summary(model)
ggplot(data = visited_id_with_seeds, aes(x = nbGr_SR_sum)) +
facet_grid(ttt~.)+
geom_histogram(fill="#7F9F90",color="black") +
ggthemes::theme_calc(base_family = "sans") +
common_theme_hist
visited_id_with_seeds %>%
group_by(ttt) %>%
summarise(mean(nbGr_SR_sum))
# number of viable seed -> poisson like distribution with non-integer = Gamma
model <- glmer(data = visited_id_with_seeds, nbGr_SR_sum ~ ttt + (1 | session), family = Gamma(link = "log"))
Anova(model)
visited_fruit_or_not <- read.table("~/Documents/ISEM/1_ABPOLL/Data/3_COMPIL/TABLES/data_ABPOLL_flower_resume.txt",head=T) %>%
filter(!(is.na(import_nb_visit_out_co10)|import_nb_visit_out_co10==0)) %>%
filter(!(grepl("Bouton",id_flow)|grepl("NR",id_flow))) %>%
filter(frt != -1) %>% # remove fruits with problem
mutate(ttt = as.factor(case_when(grepl("FA",session)~"1_low",
grepl("MO",session)~"2_medium",
TRUE~"3_high")))
visited_fruit_or_not %>%
group_by(ttt) %>%
summarise(mean(frt))
# number of viable seed -> poisson like distribution with non-integer = Gamma
model <- glmer(data = visited_fruit_or_not, frt ~ ttt + (1 | session) + (1 | session:ID_full), family = "binomial")
Anova(model)
summary(model)
# number of viable seed -> poisson like distribution with non-integer = Gamma Gamma(link = "log")
# number of seed -> poisson distribution
model <- glmer(data = visited_with_seeds, nbGr_SR ~ ttt + import_nb_part_ID_out_co10 + (1 | session) + (1 | session:ID_full), family = "poisson")
Anova(model)
summary(model)
# number of viable seed -> poisson like distribution with non-integer = Gamma Gamma(link = "log")
# number of seed -> poisson distribution
model <- glmer(data = visited_with_seeds, nbGr_SR ~ ttt + import_nb_part_ID_out_co10 + pl + (1 | session) + (1 | session:ID_full), family = "poisson")
Anova(model)
summary(model)
Anova(model)
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
