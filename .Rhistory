pval_bat_contact <-  summary(mod_bat_oms)$coefficients[2,"Pr(>|t|)"]
dt_true_bateman <- dt_true_bateman %>%
bind_rows(tibble(session=s,n_id=n_id,sex="fem",
est_bat_oms=est_bat_oms,se_bat_oms=se_bat_oms,pval_bat_oms=pval_bat_oms,
est_bat_contact=est_bat_contact,se_bat_contact=se_bat_contact,pval_bat_contact=pval_bat_contact))
# MALES
dt_foc <- dt_foc |>
mutate(sex=relevel(as.factor(sex), ref = "mal"))
mod_bat_oms <- lmerTest::lmer(data=dt_foc,r_sr~r_oms*sex+(1|id))
est_bat_oms <- summary(mod_bat_oms)$coefficients[2,"Estimate"]
se_bat_oms <- summary(mod_bat_oms)$coefficients[2,"Std. Error"]
pval_bat_oms <-  summary(mod_bat_oms)$coefficients[2,"Pr(>|t|)"]
mod_bat_contact <- lmerTest::lmer(data=dt_foc,r_sr~r_index_A1*sex+(1|id))
est_bat_contact <- summary(mod_bat_oms)$coefficients[2,"Estimate"]
se_bat_contact <- summary(mod_bat_oms)$coefficients[2,"Std. Error"]
pval_bat_contact <-  summary(mod_bat_oms)$coefficients[2,"Pr(>|t|)"]
dt_true_bateman <- dt_true_bateman %>%
bind_rows(tibble(session=s,n_id=n_id,sex="mal",
est_bat_oms=est_bat_oms,se_bat_oms=se_bat_oms,pval_bat_oms=pval_bat_oms,
est_bat_contact=est_bat_contact,se_bat_contact=se_bat_contact,pval_bat_contact=pval_bat_contact))
# INTER
dt_foc <- dt_foc |>
mutate(sex=relevel(as.factor(sex), ref = "fem"))
mod_bat_oms <- lmerTest::lmer(data=dt_foc,r_sr~r_oms*sex+(1|id))
est_bat_oms <- summary(mod_bat_oms)$coefficients[4,"Estimate"]
se_bat_oms <- summary(mod_bat_oms)$coefficients[4,"Std. Error"]
pval_bat_oms <-  summary(mod_bat_oms)$coefficients[4,"Pr(>|t|)"]
mod_bat_contact <- lmerTest::lmer(data=dt_foc,r_sr~r_index_A1*sex+(1|id))
est_bat_contact <- summary(mod_bat_oms)$coefficients[2,"Estimate"]
se_bat_contact <- summary(mod_bat_oms)$coefficients[2,"Std. Error"]
pval_bat_contact <-  summary(mod_bat_oms)$coefficients[2,"Pr(>|t|)"]
dt_true_bateman <- dt_true_bateman %>%
bind_rows(tibble(session=s,n_id=n_id,sex="inter",
est_bat_oms=est_bat_oms,se_bat_oms=se_bat_oms,pval_bat_oms=pval_bat_oms,
est_bat_contact=est_bat_contact,se_bat_contact=se_bat_contact,pval_bat_contact=pval_bat_contact))
}
dt_true_bateman
# FEMALES
dt_foc <- dt_foc |>
mutate(sex=relevel(as.factor(sex), ref = "fem"))
mod_bat_oms <- lmerTest::lmer(data=dt_foc,r_sr~r_oms*sex+(1|id))
est_bat_oms <- summary(mod_bat_oms)$coefficients[2,"Estimate"]
est_bat_oms
mod_bat_contact <- lmerTest::lmer(data=dt_foc,r_sr~r_index_A1*sex+(1|id))
est_bat_contact <- summary(mod_bat_oms)$coefficients[2,"Estimate"]
est_bat_contact
dt_merged <- dt_true_rs |>
select(session, id, sr_fem_out_share_seed, sr_mal_out_share_seed) |>
left_join(
dt_proxy |>
select(id,
index_A1,
!!sym(paste0("oms_fem_", cols)),
!!sym(paste0("oms_mal_", cols)))
) |>
mutate(across(where(is.numeric), ~ . / mean(., na.rm = TRUE), .names = "r_{.col}")) |>
select(session, id, starts_with("r_")) |>
pivot_longer(
cols = starts_with(c("r_sr","r_oms")),
names_to = c(".value", "sex"),
names_pattern = "r_(sr|oms)_(fem|mal)_.*"
) |>
rename(r_sr=sr,
r_oms=oms)
dt_true_bateman <- tibble()
for(s in unique(dt_merged$session)){
dt_foc <- dt_merged %>%
filter(session==s)
n_id = dt_foc %>%
filter(!is.na(r_sr)) %>%
summarize(n()) %>% pull()
# FEMALES
dt_foc <- dt_foc |>
mutate(sex=relevel(as.factor(sex), ref = "fem"))
mod_bat_oms <- lmerTest::lmer(data=dt_foc,r_sr~r_oms*sex+(1|id))
est_bat_oms <- summary(mod_bat_oms)$coefficients[2,"Estimate"]
se_bat_oms <- summary(mod_bat_oms)$coefficients[2,"Std. Error"]
pval_bat_oms <-  summary(mod_bat_oms)$coefficients[2,"Pr(>|t|)"]
mod_bat_contact <- lmerTest::lmer(data=dt_foc,r_sr~r_index_A1*sex+(1|id))
est_bat_contact <- summary(mod_bat_contact)$coefficients[2,"Estimate"]
se_bat_contact <- summary(mod_bat_contact)$coefficients[2,"Std. Error"]
pval_bat_contact <-  summary(mod_bat_contact)$coefficients[2,"Pr(>|t|)"]
dt_true_bateman <- dt_true_bateman %>%
bind_rows(tibble(session=s,n_id=n_id,sex="fem",
est_bat_oms=est_bat_oms,se_bat_oms=se_bat_oms,pval_bat_oms=pval_bat_oms,
est_bat_contact=est_bat_contact,se_bat_contact=se_bat_contact,pval_bat_contact=pval_bat_contact))
# MALES
dt_foc <- dt_foc |>
mutate(sex=relevel(as.factor(sex), ref = "mal"))
mod_bat_oms <- lmerTest::lmer(data=dt_foc,r_sr~r_oms*sex+(1|id))
est_bat_oms <- summary(mod_bat_oms)$coefficients[2,"Estimate"]
se_bat_oms <- summary(mod_bat_oms)$coefficients[2,"Std. Error"]
pval_bat_oms <-  summary(mod_bat_oms)$coefficients[2,"Pr(>|t|)"]
mod_bat_contact <- lmerTest::lmer(data=dt_foc,r_sr~r_index_A1*sex+(1|id))
est_bat_contact <- summary(mod_bat_contact)$coefficients[2,"Estimate"]
se_bat_contact <- summary(mod_bat_contact)$coefficients[2,"Std. Error"]
pval_bat_contact <-  summary(mod_bat_contact)$coefficients[2,"Pr(>|t|)"]
dt_true_bateman <- dt_true_bateman %>%
bind_rows(tibble(session=s,n_id=n_id,sex="mal",
est_bat_oms=est_bat_oms,se_bat_oms=se_bat_oms,pval_bat_oms=pval_bat_oms,
est_bat_contact=est_bat_contact,se_bat_contact=se_bat_contact,pval_bat_contact=pval_bat_contact))
# INTER
dt_foc <- dt_foc |>
mutate(sex=relevel(as.factor(sex), ref = "fem"))
mod_bat_oms <- lmerTest::lmer(data=dt_foc,r_sr~r_oms*sex+(1|id))
est_bat_oms <- summary(mod_bat_oms)$coefficients[4,"Estimate"]
se_bat_oms <- summary(mod_bat_oms)$coefficients[4,"Std. Error"]
pval_bat_oms <-  summary(mod_bat_oms)$coefficients[4,"Pr(>|t|)"]
mod_bat_contact <- lmerTest::lmer(data=dt_foc,r_sr~r_index_A1*sex+(1|id))
est_bat_contact <- summary(mod_bat_contact)$coefficients[4,"Estimate"]
se_bat_contact <- summary(mod_bat_contact)$coefficients[4,"Std. Error"]
pval_bat_contact <-  summary(mod_bat_contact)$coefficients[4,"Pr(>|t|)"]
dt_true_bateman <- dt_true_bateman %>%
bind_rows(tibble(session=s,n_id=n_id,sex="inter",
est_bat_oms=est_bat_oms,se_bat_oms=se_bat_oms,pval_bat_oms=pval_bat_oms,
est_bat_contact=est_bat_contact,se_bat_contact=se_bat_contact,pval_bat_contact=pval_bat_contact))
}
dt_true_bateman
dt_merged
# ALL SESSIONS
mod_bat_all_oms <- lmerTest::lmer(data=dt_merged,r_sr~r_oms*sex+(1|session)+(1|session:id))
# ALL SESSIONS
mod_bat_all_oms <- lmerTest::lmer(data=dt_merged,r_sr~r_oms*sex+(1|session)+(1|session:id))
est_bat_all_oms <- summary(mod_bat_all_oms)$coefficients[4,"Estimate"]
summary(mod_bat_all_oms)
mod_bat_all_oms <- lmerTest::lmer(data=dt_merged,r_sr~r_oms*sex+(1|session)+(1|session:id))
summary(mod_bat_all_oms)
dt_true_bateman_all <- tibble()
# FEMALES
dt_merged <- dt_merged |>
mutate(sex=relevel(as.factor(sex), ref = "fem"))
mod_bat_all_oms <- lmerTest::lmer(data=dt_merged,r_sr~r_oms*sex+(1|session)+(1|session:id))
est_bat_all_oms <- summary(mod_bat_all_oms)$coefficients[2,"Estimate"]
se_bat_all_oms <- summary(mod_bat_all_oms)$coefficients[2,"Std. Error"]
pval_bat_all_oms <-  summary(mod_bat_all_oms)$coefficients[2,"Pr(>|t|)"]
mod_bat_all_contact <- lmerTest::lmer(data=dt_merged,r_sr~r_index_A1*sex+(1|session)+(1|session:id))
est_bat_all_contact <- summary(mod_bat_all_contact)$coefficients[2,"Estimate"]
se_bat_all_contact <- summary(mod_bat_all_contact)$coefficients[2,"Std. Error"]
pval_bat_all_contact <-  summary(mod_bat_all_contact)$coefficients[2,"Pr(>|t|)"]
dt_true_bateman_all <- dt_true_bateman_all %>%
bind_rows(tibble(session=s,sex="fem",
est_bat_all_oms=est_bat_all_oms,se_bat_all_oms=se_bat_all_oms,pval_bat_all_oms=pval_bat_all_oms,
est_bat_all_contact=est_bat_all_contact,se_bat_all_contact=se_bat_all_contact,pval_bat_all_contact=pval_bat_all_contact))
# MALES
dt_merged <- dt_merged |>
mutate(sex=relevel(as.factor(sex), ref = "mal"))
mod_bat_all_oms <- lmerTest::lmer(data=dt_merged,r_sr~r_oms*sex+(1|session)+(1|session:id))
est_bat_all_oms <- summary(mod_bat_all_oms)$coefficients[2,"Estimate"]
se_bat_all_oms <- summary(mod_bat_all_oms)$coefficients[2,"Std. Error"]
pval_bat_all_oms <-  summary(mod_bat_all_oms)$coefficients[2,"Pr(>|t|)"]
mod_bat_all_contact <- lmerTest::lmer(data=dt_merged,r_sr~r_index_A1*sex+(1|session)+(1|session:id))
est_bat_all_contact <- summary(mod_bat_all_contact)$coefficients[2,"Estimate"]
se_bat_all_contact <- summary(mod_bat_all_contact)$coefficients[2,"Std. Error"]
pval_bat_all_contact <-  summary(mod_bat_all_contact)$coefficients[2,"Pr(>|t|)"]
dt_true_bateman_all <- dt_true_bateman_all %>%
bind_rows(tibble(session=s,sex="mal",
est_bat_all_oms=est_bat_all_oms,se_bat_all_oms=se_bat_all_oms,pval_bat_all_oms=pval_bat_all_oms,
est_bat_all_contact=est_bat_all_contact,se_bat_all_contact=se_bat_all_contact,pval_bat_all_contact=pval_bat_all_contact))
# INTER
dt_merged <- dt_merged |>
mutate(sex=relevel(as.factor(sex), ref = "fem"))
mod_bat_all_oms <- lmerTest::lmer(data=dt_merged,r_sr~r_oms*sex+(1|session)+(1|session:id))
est_bat_all_oms <- summary(mod_bat_all_oms)$coefficients[4,"Estimate"]
se_bat_all_oms <- summary(mod_bat_all_oms)$coefficients[4,"Std. Error"]
pval_bat_all_oms <-  summary(mod_bat_all_oms)$coefficients[4,"Pr(>|t|)"]
mod_bat_all_contact <- lmerTest::lmer(data=dt_merged,r_sr~r_index_A1*sex+(1|session)+(1|session:id))
est_bat_all_contact <- summary(mod_bat_all_contact)$coefficients[4,"Estimate"]
se_bat_all_contact <- summary(mod_bat_all_contact)$coefficients[4,"Std. Error"]
pval_bat_all_contact <-  summary(mod_bat_all_contact)$coefficients[4,"Pr(>|t|)"]
dt_true_bateman_all <- dt_true_bateman_all %>%
bind_rows(tibble(session=s,sex="inter",
est_bat_all_oms=est_bat_all_oms,se_bat_all_oms=se_bat_all_oms,pval_bat_all_oms=pval_bat_all_oms,
est_bat_all_contact=est_bat_all_contact,se_bat_all_contact=se_bat_all_contact,pval_bat_all_contact=pval_bat_all_contact))
dt_true_bateman_all
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
targets::tar_load(data_true_rs)
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
targets::tar_load(data_true_bateman)
data_true_bateman$dt_true_bateman
data_true_bateman$dt_true_bateman_all
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
targets::tar_load(data_true_bateman$dt_merged)
targets::tar_load(data_true_bateman)
data_true_bateman$dt_merged
??facet_wrap
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
quarto::quarto_render("index.qmd", quiet = FALSE)
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
View(data_true_bateman$dt_true_bateman)
View(data_true_bateman$dt_merged)
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
data_true_bateman$dt_true_bateman
data_true_bateman$dt_true_bateman %>%
filter(sex != inter)
library(dplyr)
data_true_bateman$dt_true_bateman %>%
filter(sex != inter)
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
data_true_bateman$dt_true_bateman
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
data_true_bateman$dt_true_bateman %>%
filter(sex != "inter") %>%
left_join(ranges, by = c("session", "sex")) %>%
mutate(
y_min = est_bat_oms * (x_min - 1) + 1, # slope centered on (1,1)
y_max = est_bat_oms * (x_max - 1) + 1,
alpha_line = ifelse(pval_bat_oms < 0.05, 1, 0.2) # transparence selon significativité
)
# 1. Récupérer les min/max de r_oms pour chaque session × sex
ranges <- data_true_bateman$dt_merged %>%
filter(!is.na(r_sr)) %>%
group_by(session, sex) %>%
summarise(
x_min = min(r_oms, na.rm = TRUE),
x_max = max(r_oms, na.rm = TRUE),
.groups = "drop"
)
# 2. Fusionner avec les pentes (est_bat_oms) et les p-values
regression_lines <- data_true_bateman$dt_true_bateman %>%
filter(sex != "inter") %>%
left_join(ranges, by = c("session", "sex")) %>%
mutate(
y_min = est_bat_oms * (x_min - 1) + 1, # slope centered on (1,1)
y_max = est_bat_oms * (x_max - 1) + 1,
alpha_line = ifelse(pval_bat_oms < 0.05, 1, 0.2) # transparence selon significativité
)
regression_lines
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
# 2. Fusionner avec les pentes (est_bat_oms) et les p-values
regression_lines <- data_true_bateman$dt_true_bateman %>%
filter(sex != "inter") %>%
left_join(ranges, by = c("session", "sex")) %>%
mutate(
y_min = est_bat_oms * (x_min - 1) + 1, # slope centered on (1,1)
y_max = est_bat_oms * (x_max - 1) + 1,
signif_label = ifelse(pval_bat_oms < 0.05, "*", "") # transparence selon significativité
)
regression_lines
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
regression_lines
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
# 1. Récupérer les min/max de r_oms pour chaque session × sex
ranges <- data_true_bateman$dt_merged %>%
filter(!is.na(r_sr)) %>%
group_by(session, sex) %>%
summarise(
x_min = min(r_oms, na.rm = TRUE),
x_max = max(r_oms, na.rm = TRUE),
.groups = "drop"
)
# 2. Fusionner avec les pentes (est_bat_oms) et les p-values
regression_lines <- data_true_bateman$dt_true_bateman %>%
filter(sex != "inter") %>%
left_join(ranges, by = c("session", "sex")) %>%
mutate(
y_min = est_bat_oms * (x_min - 1) + 1, # slope centered on (1,1)
y_max = est_bat_oms * (x_max - 1) + 1,
significant = ifelse(pval_bat_oms < 0.05, "TRUE", "FALSE")
)
regression_lines
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
df <- data.frame(
x_min = c(0, 1),
x_max = c(1, 2),
y_min = c(0, 1),
y_max = c(1, 2),
sex = c("M", "F"),
significant = factor(c("TRUE", "FALSE"), levels = c("TRUE", "FALSE"))
)
ggplot(df) +
geom_segment(aes(x = x_min, xend = x_max, y = y_min, yend = y_max, alpha = significant, colour = sex), size = 1) +
scale_alpha_manual(values = c("TRUE" = 1, "FALSE" = 0.2))
library(ggplot2)
df <- data.frame(
x_min = c(0, 1),
x_max = c(1, 2),
y_min = c(0, 1),
y_max = c(1, 2),
sex = c("M", "F"),
significant = factor(c("TRUE", "FALSE"), levels = c("TRUE", "FALSE"))
)
ggplot(df) +
geom_segment(aes(x = x_min, xend = x_max, y = y_min, yend = y_max, alpha = significant, colour = sex), size = 1) +
scale_alpha_manual(values = c("TRUE" = 1, "FALSE" = 0.2))
# 2. Fusionner avec les pentes (est_bat_oms) et les p-values
regression_lines <- data_true_bateman$dt_true_bateman %>%
filter(sex != "inter") %>%
left_join(ranges, by = c("session", "sex")) %>%
mutate(
y_min = est_bat_oms * (x_min - 1) + 1, # slope centered on (1,1)
y_max = est_bat_oms * (x_max - 1) + 1,
significant = factor(ifelse(pval_bat_oms < 0.05, "TRUE", "FALSE"), levels = c("TRUE", "FALSE"))
)
str(regression_lines)
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
regression_lines
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
regression_lines
# 2. Fusionner avec les pentes (est_bat_oms) et les p-values
regression_lines <- data_true_bateman$dt_true_bateman %>%
filter(sex != "inter") %>%
left_join(ranges, by = c("session", "sex")) %>%
mutate(
y_min = est_bat_oms * (x_min - 1) + 1, # slope centered on (1,1)
y_max = est_bat_oms * (x_max - 1) + 1,
label_text = paste0(est_bat_oms," +/- ", se_bat_oms," , ",pval_bat_oms),
y_text = ifelse(sex == "mal", 3, 4)
)
regression_lines
# 2. Fusionner avec les pentes (est_bat_oms) et les p-values
regression_lines <- data_true_bateman$dt_true_bateman %>%
filter(sex != "inter") %>%
left_join(ranges, by = c("session", "sex")) %>%
mutate(
y_min = est_bat_oms * (x_min - 1) + 1, # slope centered on (1,1)
y_max = est_bat_oms * (x_max - 1) + 1,
label_text = paste0(round(est_bat_oms,2)," +/- ", round(se_bat_oms,2)," , ", round(pval_bat_oms,2)),
y_text = ifelse(sex == "mal", 3, 4)
)
regression_lines
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
?geom_text
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
#' Project builder
## Install Dependencies (listed in DESCRIPTION) ----
remotes::install_deps(upgrade = "never")
## Run Project ----
targets::tar_make()
