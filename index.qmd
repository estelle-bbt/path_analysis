---
title: "Mating success"
format: 
  html:
    theme: cosmo
    toc: true
execute:
  echo: false
  warning: false
  message: false
  freeze: false
editor: visual
runtime: shiny
editor_options: 
  chunk_output_type: console
bibliography: references.bib
csl: styles/proceedings-of-the-royal-society-b.csl
---

```{r setup, include=FALSE}
# Remove messages containing "Attachement du package"
knitr::knit_hooks$set(message = function(x, options) {
  if (grepl("Attachement du package", x)) {
    return("")
  }
  return(x)
})

library(ggplot2)
library(tidyverse)
```

# Article #1: oms estimation

Visualize the pipeline analyses:

```{r,echo=FALSE,message=FALSE,warning=FALSE}
targets::tar_visnetwork()
```

::: {.content-hidden when-format="html"}
Visualize the tables :
:::

```{r,warning=FALSE}
knitr::kable(head(targets::tar_read(data_id)))

knitr::kable(head(targets::tar_read(data_obs)))
```

# What is the best proxy for observational mating success?

We have conducted an experiment in which we surveyed each pollinator one by one along the visit sequences, up to the flower scale. By making assumptions about the carry-over (i.e., the number of successive flower visits during which pollen export remains effective), we are able to estimate the number of observational sexual partners, both for the female and the male function. We assume that the carry-over is about 10, based on a previous study on the sister species *Brassica napus*: for the male function, 91% of the seeds were sired in the first four flowers visited after a focal individual, and no seeds were sired after the 14th flower visited [@cresswell_method_1994].

Now, we imagine a more common experiment *in natura* in which we cannot follow the pollinators one by one. We could rather observe plant by plant. We then have the following data :

-   the number of arrivals (female function) / departures (male function) per individual, which are highly correlated = number of contacts (which may be independent or not) per individual\
-   the total number of visits per individual\
-   the total visit duration per individual (but not useful here, as we only formulate hypotheses about visit sequences, without getting interested in the number of pollen grains exported/deposited): we leave that aside

We can imagine that each observer notes the time of the pollinator's arrival on each plant (start), to order events of contacts:

```{r,warning=FALSE}
knitr::kable(head(targets::tar_read(data_contact)$data_contact))
```

But then, what to do with this? We don't know the identity of the pollinator,\
so it is difficult to infer anything from the visit order...

Something more realistic is to start from data at the individual level without inferring anything about the effect of visit order:

```{r,warning=FALSE}
knitr::kable(head(targets::tar_read(data_contact)$data_contact_id))
```

To discuss: something smart to do with contact order?

Then, we can summarize data at the scale of the observation session. At least useful to compare\
populations between them? We can get the following data:

-   Total number of contacts with id
-   Total number of visits\
-   Total number of visited individuals (maximum oms)\
-   Total number of pollinators (but see below)\
-   Total visit duration (but again, we leave that aside)

```{r,warning=FALSE}
knitr::kable(head(targets::tar_read(data_session)))
```

Because, imagine that one individual had a lot of contacts with pollinators, but\
that only a few other individuals were visited: this should weaken the link between\
the number of contacts per id and oms.

Using the data table with contacts ordered by time, we could imagine estimating\
the diversity of potential sexual partners according to their relative frequency\
(e.g., using Hill/Shannon/Simpson indices).

NB: In our experiment, we know for sure the number of pollinators that visited\
plants. *In natura*, it would be much more difficult, but we could at least get an estimation\
based on the species diversity that we observed (i.e., if we observed\
two contacts by *Bombus* and one contact by *Apis*, there are at least two different\
pollinators).

We now investigate which proxy best correlates with the observational number of mates.\
We estimate the latter using a carry-over of 10, as well as 5 and 20. We thus\
have two main proxies:

-   

    A)  the number of contacts per individual\

-   

    B)  the total number of visits per individual

A)  For the number of contacts per individual, we can explore its correlation with\
    oms using:\

-   index_A1: the raw number of contacts per individual\
-   index_A2: relativized by the total number of contacts in the session\
-   index_A3: multiplied by the total number of potential sexual partners\
-   index_A4: combining index_A2 and index_A3\

B)  For the total number of visits per individual:\

-   index_B1: the raw number of visits per individual\
-   index_B2: relativized by the total number of visits in the session\
-   index_B3: multiplied by the total number of potential sexual partners\
-   index_B4: combining index_B2 and index_B3\

After discussion with Jeanne, we also explore the same proxies based on total visit duration per individual:\

C)  For the total visit duration per individual:\

-   index_C1: the raw total visit duration per individual\
-   index_C2: relativized by the total visit duration in the session\
-   index_C3: multiplied by the total number of potential sexual partners\
-   index_C4: combining index_C2 and index_C3\

```{r,warning=FALSE}
knitr::kable(head(targets::tar_read(data_proxy)$data_proxy))
```

Okay now we proceed to the analyses.

## Linear models and R^2^

**A3**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
targets::tar_load(linear_models_oms_proxy)
anova(linear_models_oms_proxy$mod_A3,linear_models_oms_proxy$mod_A3_null_1)
anova(linear_models_oms_proxy$mod_A3_null_1,linear_models_oms_proxy$mod_A3_null_2)
summary(linear_models_oms_proxy$mod_A3_null_2)
performance::r2_nakagawa(linear_models_oms_proxy$mod_A3_null_2)
```

**A1**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
anova(linear_models_oms_proxy$mod_A1,linear_models_oms_proxy$mod_A1_null_1)
anova(linear_models_oms_proxy$mod_A1_null_1,linear_models_oms_proxy$mod_A1_null_2)
summary(linear_models_oms_proxy$mod_A1_null_2)
performance::r2_nakagawa(linear_models_oms_proxy$mod_A1_null_2)
```

**B3**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
anova(linear_models_oms_proxy$mod_B3,linear_models_oms_proxy$mod_B3_null_1)
anova(linear_models_oms_proxy$mod_B3_null_1,linear_models_oms_proxy$mod_B3_null_2)
summary(linear_models_oms_proxy$mod_B3_null_2)
performance::r2_nakagawa(linear_models_oms_proxy$mod_B3_null_2)
```

**B1**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
anova(linear_models_oms_proxy$mod_B1,linear_models_oms_proxy$mod_B1_null_1)
anova(linear_models_oms_proxy$mod_B1_null_1,linear_models_oms_proxy$mod_B1_null_2)
summary(linear_models_oms_proxy$mod_B1_null_2)
performance::r2_nakagawa(linear_models_oms_proxy$mod_B1_null_2)
```

**C3**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
anova(linear_models_oms_proxy$mod_C3,linear_models_oms_proxy$mod_C3_null_1)
anova(linear_models_oms_proxy$mod_C3_null_1,linear_models_oms_proxy$mod_C3_null_2)
summary(linear_models_oms_proxy$mod_C3_null_2)
performance::r2_nakagawa(linear_models_oms_proxy$mod_C3_null_2)
```

**C1**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
anova(linear_models_oms_proxy$mod_C1,linear_models_oms_proxy$mod_C1_null_1)
anova(linear_models_oms_proxy$mod_C1_null_1,linear_models_oms_proxy$mod_C1_null_2)
summary(linear_models_oms_proxy$mod_C1_null_2)
performance::r2_nakagawa(linear_models_oms_proxy$mod_C1_null_2)
```

Conditionnal R2 (fixed and random effects) :

- A3 : `r as.data.frame(performance::r2_nakagawa(linear_models_oms_proxy$mod_A3_null_2))[1,"R2_conditional"]`\ 
- A1 : `r as.data.frame(performance::r2_nakagawa(linear_models_oms_proxy$mod_A1_null_2))[1,"R2_conditional"]`\ 
- B3 : `r as.data.frame(performance::r2_nakagawa(linear_models_oms_proxy$mod_B3_null_2))[1,"R2_conditional"]`\ 
- B1 : `r as.data.frame(performance::r2_nakagawa(linear_models_oms_proxy$mod_B1_null_2))[1,"R2_conditional"]`\ 
- C3 : `r as.data.frame(performance::r2_nakagawa(linear_models_oms_proxy$mod_C3_null_2))[1,"R2_conditional"]`\ 
- C1 : `r as.data.frame(performance::r2_nakagawa(linear_models_oms_proxy$mod_C1_null_2))[1,"R2_conditional"]`\ 

Marginal R2 (fixed effects only) :

- A3 : `r as.data.frame(performance::r2_nakagawa(linear_models_oms_proxy$mod_A3_null_2))[1,"R2_marginal"]`\ 
- A1 : `r as.data.frame(performance::r2_nakagawa(linear_models_oms_proxy$mod_A1_null_2))[1,"R2_marginal"]`\ 
- B3 : `r as.data.frame(performance::r2_nakagawa(linear_models_oms_proxy$mod_B3_null_2))[1,"R2_marginal"]`\ 
- B1 : `r as.data.frame(performance::r2_nakagawa(linear_models_oms_proxy$mod_B1_null_2))[1,"R2_marginal"]`\ 
- C3 : `r as.data.frame(performance::r2_nakagawa(linear_models_oms_proxy$mod_C3_null_2))[1,"R2_marginal"]`\ 
- C1 : `r as.data.frame(performance::r2_nakagawa(linear_models_oms_proxy$mod_C1_null_2))[1,"R2_marginal"]`\ 

> **Based on marginal, A3 is the best proxy, but based on conditionnal, C1 is better.**
> Ask FranÃ§ois why

## AIC

**A3**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
AIC(linear_models_oms_proxy$mod_A3)
```

**A1**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
AIC(linear_models_oms_proxy$mod_A1)
```

**B3**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
AIC(linear_models_oms_proxy$mod_B3)
```

**B1**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
AIC(linear_models_oms_proxy$mod_B1)
```

**C3**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
AIC(linear_models_oms_proxy$mod_B3)
```

**C1**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
AIC(linear_models_oms_proxy$mod_B1)
```

> **Best AIC is for A1.**

## Conclusions

> To summarize, the number of contacts, and the number of contacts x max_oms, seems to be both good predictors of observational mating success. To do : Bateman gradients with the number of contacts to see if we obtain the same results? Necessary?

## Plots
```{r,echo=FALSE,warning=FALSE,message=FALSE}
targets::tar_load(predictions_oms_proxy)

ggplot(predictions_oms_proxy, aes(x = x_seq, y = fit)) +
  facet_wrap(var ~ cat,scales = "free") +
  geom_line(color = "blue", size = 1) +
  geom_ribbon(aes(ymin = lwr, ymax = upr), fill = "blue", alpha = 0.2) +
  theme_minimal()


```

## Do we recover the same results than when using oms?

```{r,echo=FALSE,warning=FALSE,message=FALSE}

# get bateman with all sessions with sampled genotypes
# and compare using oms and the other indexes

```

# Which traits are good predictor of mate access?

We measured:

- **nb_flo:** the number of "receptive" flowers

- **nb_flo_open:** the number of opened flowers (including very new ones)

- **nb_flo_all:** the total number of flowers (including very new and old ones)

- **height_max:** the height of the highest flower

- **height_mean:** the mean height of the highest flowers on each stem

- **nb_stem:** the number of stems

Best way to do this analysis: SEM for the direct and indirect effect on oms and rs?

We proceed per sex and per treatment, as we saw that (i) there is an effect of ttt
at least on oms and (ii) rs is different (contrary to oms) between sexual function,
and there are biological hypotheses on a different effect of floral traits between sexual
function.

## Separate sex : same pathways
### Total rs
#### With nb_flo_open, nb_stem and height_mean

**For the low treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
targets::tar_load(piecewise_low_fem_combi1)
piecewise_low_fem_combi1$plot
```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
targets::tar_load(piecewise_low_mal_combi1)
piecewise_low_mal_combi1$plot

```
:::
:::::

**For the medium treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
targets::tar_load(piecewise_medium_fem_combi1)
piecewise_medium_fem_combi1$plot

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
targets::tar_load(piecewise_medium_mal_combi1)
piecewise_medium_mal_combi1$plot

```
:::
:::::

**For the high treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
targets::tar_load(piecewise_high_fem_combi1)
piecewise_high_fem_combi1$plot

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
targets::tar_load(piecewise_high_mal_combi1)
piecewise_high_mal_combi1$plot
```
:::
:::::

> - Nothing in low treatment for both sexes
> - Only positive bateman gradients for males in medium treatment
> - Natural positive selection on number of opened flowers for male only in high treatment
> - Same results with total rs

#### With nb_flo_all and height_max

**For the low treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
targets::tar_load(data_sem_sampled_sessions)
data_sem_sampled_sessions_low_fem <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_fem,r_oms~r_nb_flo_all+r_height_max+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_low_fem,r_sr_all~r_oms+r_nb_flo_all+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_all+r_height_max+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr_all~r_oms+r_nb_flo_all+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

**For the medium treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_fem <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_fem,r_oms~r_nb_flo_all+r_height_max+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_med_fem,r_sr_all~r_oms+r_nb_flo_all+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_all+r_height_max+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr_all~r_oms+r_nb_flo_all+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

**For the high treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_fem <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_fem,r_oms~r_nb_flo_all+r_height_max+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_high_fem,r_sr_all~r_oms+r_nb_flo_all+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_all+r_height_max+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr_all~r_oms+r_nb_flo_all+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

> - In the high treatment, when using the total number of flowers, there is no longer direct natural selection on it for the male function -> selection through attractiveness? On the contrary, there is natural selection for the female function -> fertility selection?
> - Same results with total rs

#### With nb_flo_open and height_mean

**For the low treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_fem <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_fem,r_oms~r_nb_flo_open+r_height_mean+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_low_fem,r_sr_all~r_oms+r_nb_flo_open+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_open+r_height_mean+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr_all~r_oms+r_nb_flo_open+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

**For the medium treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_fem <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_fem,r_oms~r_nb_flo_open+r_height_mean+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_med_fem,r_sr_all~r_oms+r_nb_flo_open+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_open+r_height_mean+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr_all~r_oms+r_nb_flo_open+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

**For the high treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_fem <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_fem,r_oms~r_nb_flo_open+r_height_mean+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_high_fem,r_sr_all~r_oms+r_nb_flo_open+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_open+r_height_mean+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr_all~r_oms+r_nb_flo_open+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

> - In the medium treatment, sexual selection on number of opened flowers and mean height only for the male function
> - In the high treatment, natural selection for number of opened flower number in both sexual function
> - Same results with total rs

#### With nb_flo_all and height_mean

**For the low treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
targets::tar_load(data_sem_sampled_sessions)
data_sem_sampled_sessions_low_fem <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_fem,r_oms~r_nb_flo_all+r_height_mean+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_low_fem,r_sr_all~r_oms+r_nb_flo_all+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_all+r_height_mean+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr_all~r_oms+r_nb_flo_all+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

**For the medium treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_fem <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_fem,r_oms~r_nb_flo_all+r_height_mean+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_med_fem,r_sr_all~r_oms+r_nb_flo_all+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_all+r_height_mean+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr_all~r_oms+r_nb_flo_all+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

**For the high treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_fem <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_fem,r_oms~r_nb_flo_all+r_height_mean+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_high_fem,r_sr_all~r_oms+r_nb_flo_all+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_all+r_height_mean+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr_all~r_oms+r_nb_flo_all+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

> - Again as for nb_flo_open and height_max, only positive Bateman gradients in male for the medium treatment
> - Positive natural selection on flower number only for the female function and no more for the male function, as for nb_flo_all and height_max
> - Same results with total rs 

#### With nb_flo_open and nb_stem

**For the low treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_fem <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_fem,r_oms~r_nb_flo_open+r_nb_stem+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_low_fem,r_sr_all~r_oms+r_nb_flo_open+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_open+r_nb_stem+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr_all~r_oms+r_nb_flo_open+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

**For the medium treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_fem <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_fem,r_oms~r_nb_flo_open+r_nb_stem+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_med_fem,r_sr_all~r_oms+r_nb_flo_open+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_open+r_nb_stem+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr_all~r_oms+r_nb_flo_open+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

**For the high treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_fem <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_fem,r_oms~r_nb_flo_open+r_nb_stem+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_high_fem,r_sr_all~r_oms+r_nb_flo_open+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_open+r_nb_stem+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr_all~r_oms+r_nb_flo_open+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

> - Again only positive Bateman gradient for the male function in the medium treatment 
> - Positive natural selection on stem number for the female function in the high treatment, positive natural selection on the number of opened flower in the male function
> - Same results with total rs

#### With nb_flo_all and nb_stem

**For the low treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
targets::tar_load(data_sem_sampled_sessions)
data_sem_sampled_sessions_low_fem <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_fem,r_oms~r_nb_flo_all+r_nb_stem+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_low_fem,r_sr_all~r_oms+r_nb_flo_all+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_all+r_nb_stem+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr_all~r_oms+r_nb_flo_all+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

**For the medium treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_fem <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_fem,r_oms~r_nb_flo_all+r_nb_stem+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_med_fem,r_sr_all~r_oms+r_nb_flo_all+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_all+r_nb_stem+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr_all~r_oms+r_nb_flo_all+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

**For the high treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_fem <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_fem,r_oms~r_nb_flo_all+r_nb_stem+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_high_fem,r_sr_all~r_oms+r_nb_flo_all+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_all+r_nb_stem+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr_all~r_oms+r_nb_flo_all+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

> - Again, positivie Bateman gradient in the male function un the medium treatment
> - Nothing under selection in the high treatment
> - Same results with total rs

### Outcrossed rs
#### With nb_flo_open and height_max

**For the low treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
targets::tar_load(data_sem_sampled_sessions)
data_sem_sampled_sessions_low_fem <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_fem,r_oms~r_nb_flo_open+r_height_max+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_low_fem,r_sr~r_oms+r_nb_flo_open+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_open+r_height_max+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr~r_oms+r_nb_flo_open+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

**For the medium treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_fem <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_fem,r_oms~r_nb_flo_open+r_height_max+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_med_fem,r_sr~r_oms+r_nb_flo_open+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_open+r_height_max+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr~r_oms+r_nb_flo_open+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

**For the high treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_fem <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_fem,r_oms~r_nb_flo_open+r_height_max+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_high_fem,r_sr~r_oms+r_nb_flo_open+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_open+r_height_max+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr~r_oms+r_nb_flo_open+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

> - Nothing in low treatment for both sexes
> - Only positive bateman gradients for males in medium treatment
> - Natural positive selection on number of opened flowers for male only in high treatment

#### With nb_flo_all and height_max

**For the low treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
targets::tar_load(data_sem_sampled_sessions)
data_sem_sampled_sessions_low_fem <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_fem,r_oms~r_nb_flo_all+r_height_max+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_low_fem,r_sr~r_oms+r_nb_flo_all+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_all+r_height_max+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr~r_oms+r_nb_flo_all+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

**For the medium treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_fem <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_fem,r_oms~r_nb_flo_all+r_height_max+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_med_fem,r_sr~r_oms+r_nb_flo_all+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_all+r_height_max+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr~r_oms+r_nb_flo_all+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

**For the high treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_fem <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_fem,r_oms~r_nb_flo_all+r_height_max+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_high_fem,r_sr~r_oms+r_nb_flo_all+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_all+r_height_max+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr~r_oms+r_nb_flo_all+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

> In the high treatment, when using the total number of flowers, there is no longer direct natural selection on it for the male function -> selection through attractiveness? On the contrary, there is natural selection for the female function -> fertility selection?

#### With nb_flo_open and height_mean

**For the low treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_fem <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_fem,r_oms~r_nb_flo_open+r_height_mean+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_low_fem,r_sr~r_oms+r_nb_flo_open+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_open+r_height_mean+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr~r_oms+r_nb_flo_open+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

**For the medium treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_fem <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_fem,r_oms~r_nb_flo_open+r_height_mean+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_med_fem,r_sr~r_oms+r_nb_flo_open+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_open+r_height_mean+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr~r_oms+r_nb_flo_open+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

**For the high treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_fem <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_fem,r_oms~r_nb_flo_open+r_height_mean+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_high_fem,r_sr~r_oms+r_nb_flo_open+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_open+r_height_mean+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr~r_oms+r_nb_flo_open+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

> - In the medium treatment, sexual selection on number of opened flowers and mean height only for the male function
> - In the high treatment, natural selection for number of opened flower number in both sexual function

#### With nb_flo_all and height_mean

**For the low treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
targets::tar_load(data_sem_sampled_sessions)
data_sem_sampled_sessions_low_fem <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_fem,r_oms~r_nb_flo_all+r_height_mean+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_low_fem,r_sr~r_oms+r_nb_flo_all+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_all+r_height_mean+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr~r_oms+r_nb_flo_all+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

**For the medium treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_fem <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_fem,r_oms~r_nb_flo_all+r_height_mean+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_med_fem,r_sr~r_oms+r_nb_flo_all+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_all+r_height_mean+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr~r_oms+r_nb_flo_all+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

**For the high treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_fem <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_fem,r_oms~r_nb_flo_all+r_height_mean+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_high_fem,r_sr~r_oms+r_nb_flo_all+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_all+r_height_mean+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr~r_oms+r_nb_flo_all+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

> - Again as for nb_flo_open and height_max, only positive Bateman gradients in male for the medium treatment
> - Positive natural selection on flower number only for the female function and no more for the male function, as for nb_floÃ¨all and height_max

#### With nb_flo_open and nb_stem

**For the low treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_fem <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_fem,r_oms~r_nb_flo_open+r_nb_stem+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_low_fem,r_sr~r_oms+r_nb_flo_open+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_open+r_nb_stem+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr~r_oms+r_nb_flo_open+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

**For the medium treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_fem <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_fem,r_oms~r_nb_flo_open+r_nb_stem+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_med_fem,r_sr~r_oms+r_nb_flo_open+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_open+r_nb_stem+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr~r_oms+r_nb_flo_open+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

**For the high treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_fem <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_fem,r_oms~r_nb_flo_open+r_nb_stem+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_high_fem,r_sr~r_oms+r_nb_flo_open+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_open+r_nb_stem+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr~r_oms+r_nb_flo_open+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

> - Again only positivie Nateman gradient for the male function in the medium treatment 
> - Positive natural selection on stem number for the female function in the high treatment, positive natueal selection on the number of opened flower in the male function

#### With nb_flo_all and nb_stem

**For the low treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
targets::tar_load(data_sem_sampled_sessions)
data_sem_sampled_sessions_low_fem <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_fem,r_oms~r_nb_flo_all+r_nb_stem+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_low_fem,r_sr~r_oms+r_nb_flo_all+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_all+r_nb_stem+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr~r_oms+r_nb_flo_all+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

**For the medium treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_fem <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_fem,r_oms~r_nb_flo_all+r_nb_stem+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_med_fem,r_sr~r_oms+r_nb_flo_all+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_all+r_nb_stem+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr~r_oms+r_nb_flo_all+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::
:::::

**For the high treatment :**

::::: grid
::: g-col-6
Females:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_fem <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "fem")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_fem,r_oms~r_nb_flo_all+r_nb_stem+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_high_fem,r_sr~r_oms+r_nb_flo_all+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```
:::

::: g-col-6
Males:

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_all+r_nb_stem+(1|session)),

                     lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr~r_oms+r_nb_flo_all+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(2,2,1,3), y=c(2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)
```
:::
:::::

> - Again, positive Bateman gradient in the male function un the medium treatment
> - Nothing under selection in the high treatment

SUMMARY
> - Same results for outcrossed or total reproductive success

## Males only : with paternity share

We estimate the paternity share by excluding selfing in order to be consistant
with oms. Paternity share is the proportion of genotyped seeds sired by a focal father.
When including selfing, we also do the analysis by integrating selfing events.

### Total rs : selfing include in paternity share
#### With nb_flo_open and height_max

**For the low treatment :**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_open+r_height_max+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_mean_ps_all~r_nb_flo_open+r_height_max+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr_all~r_oms+r_mean_ps_all+r_nb_flo_open+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the medium treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_open+r_height_max+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_mean_ps_all~r_nb_flo_open+r_height_max+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr_all~r_oms+r_mean_ps_all+r_nb_flo_open+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the high treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_open+r_height_max+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_mean_ps_all~r_nb_flo_open+r_height_max+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr_all~r_oms+r_mean_ps_all+r_nb_flo_open+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


> - In each treatment, effect of oms and ps on rs
> - ps > oms particularly in high treatment

#### With nb_flo_all and height_max

**For the low treatment :**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_all+r_height_max+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_mean_ps_all~r_nb_flo_all+r_height_max+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr_all~r_oms+r_mean_ps_all+r_nb_flo_all+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the medium treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_all+r_height_max+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_mean_ps_all~r_nb_flo_all+r_height_max+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr_all~r_oms+r_mean_ps_all+r_nb_flo_all+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the high treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_all+r_height_max+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_mean_ps_all~r_nb_flo_all+r_height_max+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr_all~r_oms+r_mean_ps_all+r_nb_flo_all+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


> - Same as before :
> - In each treatment, effect of oms and ps on rs
> - ps > oms particularly in high treatment

#### With nb_flo_open and height_mean

**For the low treatment :**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_open+r_height_mean+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_mean_ps_all~r_nb_flo_open+r_height_mean+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr_all~r_oms+r_mean_ps_all+r_nb_flo_open+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the medium treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_open+r_height_mean+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_mean_ps_all~r_nb_flo_open+r_height_mean+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr_all~r_oms+r_mean_ps_all+r_nb_flo_open+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the high treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_open+r_height_mean+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_mean_ps_all~r_nb_flo_open+r_height_mean+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr_all~r_oms+r_mean_ps_all+r_nb_flo_open+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```

> - Same as before :
> - In each treatment, effect of oms and ps on rs
> - ps > oms particularly in high treatment
> - + positive effect of floral trait on oms in the medium treatment
> - + positive effect of flower number on ps in the high treatment


#### With nb_flo_all and height_mean

**For the low treatment :**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_all+r_height_mean+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_mean_ps_all~r_nb_flo_all+r_height_mean+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr_all~r_oms+r_mean_ps_all+r_nb_flo_all+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the medium treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_all+r_height_mean+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_mean_ps_all~r_nb_flo_all+r_height_mean+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr_all~r_oms+r_mean_ps_all+r_nb_flo_all+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the high treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_all+r_height_mean+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_mean_ps_all~r_nb_flo_all+r_height_mean+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr_all~r_oms+r_mean_ps_all+r_nb_flo_all+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```

> - Same as before :
> - In each treatment, effect of oms and ps on rs
> - ps > oms particularly in high treatment

#### With nb_flo_open and nb_stem

**For the low treatment :**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_open+r_nb_stem+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_mean_ps_all~r_nb_flo_open+r_nb_stem+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr_all~r_oms+r_mean_ps_all+r_nb_flo_open+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the medium treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_open+r_nb_stem+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_mean_ps_all~r_nb_flo_open+r_nb_stem+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr_all~r_oms+r_mean_ps_all+r_nb_flo_open+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the high treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_open+r_nb_stem+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_mean_ps_all~r_nb_flo_open+r_nb_stem+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr_all~r_oms+r_mean_ps_all+r_nb_flo_open+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


> - Same as before :
> - In each treatment, effect of oms and ps on rs
> - ps > oms particularly in high treatment
> - + positive effect of flower number on ps in the high treatment

#### With nb_flo_all and nb_stem

**For the low treatment :**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_all+r_nb_stem+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_mean_ps_all~r_nb_flo_all+r_nb_stem+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr_all~r_oms+r_mean_ps_all+r_nb_flo_all+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the medium treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_all+r_nb_stem+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_mean_ps_all~r_nb_flo_all+r_nb_stem+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr_all~r_oms+r_mean_ps_all+r_nb_flo_all+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the high treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_all+r_nb_stem+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_mean_ps_all~r_nb_flo_all+r_nb_stem+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr_all~r_oms+r_mean_ps_all+r_nb_flo_all+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```

> - Same as before :
> - In each treatment, effect of oms and ps on rs
> - ps > oms particularly in high treatment

### Total rs : selfing exclude in paternity share
#### With nb_flo_open and height_max

**For the low treatment :**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_open+r_height_max+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_mean_ps~r_nb_flo_open+r_height_max+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr_all~r_oms+r_mean_ps+r_nb_flo_open+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the medium treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_open+r_height_max+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_mean_ps~r_nb_flo_open+r_height_max+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr_all~r_oms+r_mean_ps+r_nb_flo_open+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the high treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_open+r_height_max+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_mean_ps~r_nb_flo_open+r_height_max+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr_all~r_oms+r_mean_ps+r_nb_flo_open+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```

> - Same as before :
> - In each treatment, effect of oms and ps on rs
> - ps > oms particularly in high treatment
> - + positive effect of flower number on ps in the low treatment

#### With nb_flo_all and height_max

**For the low treatment :**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_all+r_height_max+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_mean_ps~r_nb_flo_all+r_height_max+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr_all~r_oms+r_mean_ps+r_nb_flo_all+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the medium treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_all+r_height_max+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_mean_ps~r_nb_flo_all+r_height_max+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr_all~r_oms+r_mean_ps+r_nb_flo_all+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the high treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_all+r_height_max+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_mean_ps~r_nb_flo_all+r_height_max+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr_all~r_oms+r_mean_ps+r_nb_flo_all+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


> - Same as before :
> - In each treatment, effect of oms and ps on rs
> - ps > oms particularly in high treatment
> - + positive effect of flower number on ps in the low treatment


#### With nb_flo_open and height_mean

**For the low treatment :**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_open+r_height_mean+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_mean_ps~r_nb_flo_open+r_height_mean+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr_all~r_oms+r_mean_ps+r_nb_flo_open+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the medium treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_open+r_height_mean+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_mean_ps~r_nb_flo_open+r_height_mean+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr_all~r_oms+r_mean_ps+r_nb_flo_open+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the high treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_open+r_height_mean+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_mean_ps~r_nb_flo_open+r_height_mean+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr_all~r_oms+r_mean_ps+r_nb_flo_open+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```

> - Same as before :
> - In each treatment, effect of oms and ps on rs
> - ps > oms particularly in high treatment
> - + positive effect of flower number on ps in the low treatment
> - + positive effect of floral traits on oms in the medium treatment
> - + positive effect of flower number on ps the the high treatment


#### With nb_flo_all and height_mean

**For the low treatment :**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_all+r_height_mean+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_mean_ps~r_nb_flo_all+r_height_mean+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr_all~r_oms+r_mean_ps+r_nb_flo_all+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the medium treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_all+r_height_mean+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_mean_ps~r_nb_flo_all+r_height_mean+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr_all~r_oms+r_mean_ps+r_nb_flo_all+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the high treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_all+r_height_mean+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_mean_ps~r_nb_flo_all+r_height_mean+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr_all~r_oms+r_mean_ps+r_nb_flo_all+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```

> - Same as before :
> - In each treatment, effect of oms and ps on rs
> - ps > oms particularly in high treatment
> - + positive effect of flower number on ps in the low treatment
> - + positive effect of flower number on ps the the high treatment

#### With nb_flo_open and nb_stem

**For the low treatment :**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_open+r_nb_stem+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_mean_ps~r_nb_flo_open+r_nb_stem+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr_all~r_oms+r_mean_ps+r_nb_flo_open+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the medium treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_open+r_nb_stem+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_mean_ps~r_nb_flo_open+r_nb_stem+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr_all~r_oms+r_mean_ps+r_nb_flo_open+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the high treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_open+r_nb_stem+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_mean_ps~r_nb_flo_open+r_nb_stem+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr_all~r_oms+r_mean_ps+r_nb_flo_open+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```

> - Same as before :
> - In each treatment, effect of oms and ps on rs
> - ps > oms particularly in high treatment
> - + positive effect of flower number on ps the the high treatment

#### With nb_flo_all and nb_stem

**For the low treatment :**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_all+r_nb_stem+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_mean_ps~r_nb_flo_all+r_nb_stem+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr_all~r_oms+r_mean_ps+r_nb_flo_all+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the medium treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_all+r_nb_stem+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_mean_ps~r_nb_flo_all+r_nb_stem+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr_all~r_oms+r_mean_ps+r_nb_flo_all+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the high treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_all+r_nb_stem+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_mean_ps~r_nb_flo_all+r_nb_stem+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr_all~r_oms+r_mean_ps+r_nb_flo_all+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```

> - Same as before :
> - In each treatment, effect of oms and ps on rs
> - ps > oms particularly in high treatment
> - + positive effect of flower number on ps the the high treatment

### Outcrossed rs
#### With nb_flo_open and height_max

**For the low treatment :**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_open+r_height_max+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_mean_ps~r_nb_flo_open+r_height_max+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr~r_oms+r_mean_ps+r_nb_flo_open+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the medium treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_open+r_height_max+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_mean_ps~r_nb_flo_open+r_height_max+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr~r_oms+r_mean_ps+r_nb_flo_open+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the high treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_open+r_height_max+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_mean_ps~r_nb_flo_open+r_height_max+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr~r_oms+r_mean_ps+r_nb_flo_open+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


#### With nb_flo_all and height_max

**For the low treatment :**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_all+r_height_max+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_mean_ps~r_nb_flo_all+r_height_max+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr~r_oms+r_mean_ps+r_nb_flo_all+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the medium treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_all+r_height_max+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_mean_ps~r_nb_flo_all+r_height_max+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr~r_oms+r_mean_ps+r_nb_flo_all+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the high treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_all+r_height_max+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_mean_ps~r_nb_flo_all+r_height_max+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr~r_oms+r_mean_ps+r_nb_flo_all+r_height_max+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


#### With nb_flo_open and height_mean

**For the low treatment :**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_open+r_height_mean+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_mean_ps~r_nb_flo_open+r_height_mean+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr~r_oms+r_mean_ps+r_nb_flo_open+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the medium treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_open+r_height_mean+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_mean_ps~r_nb_flo_open+r_height_mean+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr~r_oms+r_mean_ps+r_nb_flo_open+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the high treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_open+r_height_mean+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_mean_ps~r_nb_flo_open+r_height_mean+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr~r_oms+r_mean_ps+r_nb_flo_open+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


#### With nb_flo_all and height_mean

**For the low treatment :**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_all+r_height_mean+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_mean_ps~r_nb_flo_all+r_height_mean+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr~r_oms+r_mean_ps+r_nb_flo_all+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the medium treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_all+r_height_mean+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_mean_ps~r_nb_flo_all+r_height_mean+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr~r_oms+r_mean_ps+r_nb_flo_all+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the high treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_all+r_height_mean+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_mean_ps~r_nb_flo_all+r_height_mean+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr~r_oms+r_mean_ps+r_nb_flo_all+r_height_mean+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```

#### With nb_flo_open and nb_stem

**For the low treatment :**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_open+r_nb_stem+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_mean_ps~r_nb_flo_open+r_nb_stem+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr~r_oms+r_mean_ps+r_nb_flo_open+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the medium treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_open+r_nb_stem+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_mean_ps~r_nb_flo_open+r_nb_stem+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr~r_oms+r_mean_ps+r_nb_flo_open+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the high treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_open+r_nb_stem+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_mean_ps~r_nb_flo_open+r_nb_stem+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr~r_oms+r_mean_ps+r_nb_flo_open+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```

#### With nb_flo_all and nb_stem

**For the low treatment :**

```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_low_mal <- data_sem_sampled_sessions %>% filter(ttt == "low"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_oms~r_nb_flo_all+r_nb_stem+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_mean_ps~r_nb_flo_all+r_nb_stem+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_low_mal,r_sr~r_oms+r_mean_ps+r_nb_flo_all+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "bisque1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the medium treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_med_mal <- data_sem_sampled_sessions %>% filter(ttt == "medium"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_oms~r_nb_flo_all+r_nb_stem+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_mean_ps~r_nb_flo_all+r_nb_stem+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_med_mal,r_sr~r_oms+r_mean_ps+r_nb_flo_all+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange1",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```


**For the high treatment :**


```{r,echo=FALSE,warning=FALSE,message=FALSE}
data_sem_sampled_sessions_high_mal <- data_sem_sampled_sessions %>% filter(ttt == "high"& sex == "mal")

psem_proxy <- piecewiseSEM::psem(lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_oms~r_nb_flo_all+r_nb_stem+(1|session)),                        lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_mean_ps~r_nb_flo_all+r_nb_stem+(1|session)),
lme4::lmer(data=data_sem_sampled_sessions_high_mal,r_sr~r_oms+r_mean_ps+r_nb_flo_all+r_nb_stem+(1|session)))

plot(psem_proxy,

     node_attrs = data.frame(fillcolor = "orange4",

                                         x = c(1.5,2.5,2,1,3), y=c(2,2,3,1,1),

                                         fontsize=6),

     edge_attrs = data.frame(fontsize=6))

summary(psem_proxy)

```

> - Overall, same results as before
> - In each treatment, effect of oms and ps on rs
> - ps > oms particularly in low and high treatment

## Pool everything

With total rs and nb_flo_all and height_mean


**All sex and ttt :**

```{r,echo=FALSE,warning=FALSE,message=FALSE}

targets::tar_load(brms_pooled_data)

brms_pooled_data$summary

```

> The only thing that we can conclude is that flower number increase reproductive
> success in the high treatment for the female function, and that this effect is
> less strong for the male function

# Article #2: gms sampling
# Comparing observational to genetic mating success

## True Bateman's gradient on all data based on observations

We stay consistent with the manuscript and work with outcrossed reproductive success,

estimated on all genotypes, and the ratio is then multiplied by the number of total seeds produced per female,

both for the female and the male function (i.e. paternity share).

```{r,echo=FALSE,warning=FALSE,message=FALSE}

targets::tar_load(data_true_bateman)

# 1. RÃ©cupÃ©rer les min/max de r_oms pour chaque session Ã sex

ranges <- data_true_bateman$data_merged %>%

  filter(!is.na(r_sr)) %>%

  group_by(session, sex) %>%

  summarise(

    x_min = min(r_oms, na.rm = TRUE),

    x_max = max(r_oms, na.rm = TRUE),

    .groups = "drop"

  )

# 2. Fusionner avec les pentes (est_bat_oms) et les p-values

regression_lines <- data_true_bateman$data_true_bateman %>%

  filter(sex != "inter") %>%

  left_join(ranges, by = c("session", "sex")) %>%

  mutate(

    y_min = est_bat_oms * (x_min - 1) + 1,

    y_max = est_bat_oms * (x_max - 1) + 1,

    label_text = paste0(round(est_bat_oms,2)," +/- ", round(se_bat_oms,2)," , ", round(pval_bat_oms,2)),

    y_text = ifelse(sex == "mal", 3, 4)

  )

# GÃ©nÃ©rer des x entre x_min et x_max pour chaque ligne

regression_ribbon <- regression_lines %>%

  mutate(id = row_number()) %>%

  rowwise() %>%

  mutate(

    x_seq = list(seq(x_min, x_max, length.out = 100))

  ) %>%

  unnest(cols = c(x_seq)) %>%

  mutate(

    y = est_bat_oms * (x_seq - 1) + 1,

    ymin = (est_bat_oms - se_bat_oms) * (x_seq - 1) + 1,

    ymax = (est_bat_oms + se_bat_oms) * (x_seq - 1) + 1

  )

# 3. Graphique

ggplot(data = data_true_bateman$data_merged, aes(x = r_oms, y = r_sr, colour = sex)) +

  geom_point() +

  facet_grid(. ~ session) +

  geom_ribbon(

    data = regression_ribbon,

    aes(

      x = x_seq,

      ymin = ymin,

      ymax = ymax,

      fill = sex

    ),

    alpha = 0.2,

    inherit.aes = FALSE

  ) +

  geom_segment(

    data = regression_lines,

    aes(

      x = x_min,

      xend = x_max,

      y = y_min,

      yend = y_max,

      colour = sex

    ),

    linewidth = 1

  ) +

  geom_text(

    data = regression_lines,

    aes(x = 1,

        y = y_text,

        colour = sex,

        label = label_text),

    size = 3

  ) +

  theme_classic() +
  theme(legend.position = "bottom")

```

<!-- ## Bateman Hedge's -->

<!-- Difference between Bateman's estimates with genetic sampling versus true Bateman with observational data (sampling gms - true oms). An Hedges' g > 0 mean that the Bateman gradient estimated with sampling gms is greater than the real ones with true oms. -->

<!-- Observational versus genetic, according to the sampling percentage of genotyped seeds. -->

<!-- ### Per session: -->

<!-- ```{r,echo=FALSE,warning=FALSE,message=FALSE} -->

<!-- targets::tar_load(data_hedges_true) -->

<!-- data_hedges_true$plot_hedges -->

<!-- ``` -->

<!-- ### Overall: -->

<!-- ```{r,echo=FALSE,warning=FALSE,message=FALSE} -->

<!-- targets::tar_load(data_hedges_false) -->

<!-- data_hedges_false$plot_hedges -->

<!-- ``` -->

<!-- ## Variance decomposition -->

<!-- Observational (with and without flower) versus genetic, according to the sampling percentage of genotyped seeds -->
